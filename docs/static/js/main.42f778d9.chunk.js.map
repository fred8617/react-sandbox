{"version":3,"sources":["react-sandbox/CodeEditor.tsx","react-sandbox/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CodeEditor","beforeMount","onChange","props","container","useRef","useEffect","monaco","editor","create","current","automaticLayout","minimap","enabled","onDidChangeModelContent","event","getValue","dispose","style","height","width","ref","TypeScript","forwardRef","defaultValue","libs","extraLibs","libCode","model","monacoRef","createModel","file","useImperativeHandle","loadLibs","Object","entries","map","name","code","typescript","typescriptDefaults","addExtraLib","didMount","compilerDefaults","baseUrl","allowSyntheticDefaultImports","jsx","languages","JsxEmit","React","experimentalDecorators","noEmit","allowJs","types","setCompilerOptions","setEagerModelSync","prettierOptions","provideDocumentFormattingEdits","range","getFullModelRange","text","prettier","format","trailingComma","jsxSingleQuote","semi","plugins","babel","ts","gql","arrowParens","bracketSpacing","htmlWhitespaceSensitivity","insertPragma","jsxBracketSameLine","printWidth","proseWrap","quoteProps","requirePragma","singleQuote","tabWidth","useTabs","vueIndentScriptAndStyle","registerDocumentFormattingEditProvider","scrollbar","babelConfig","filename","presets","proposal","legacy","loose","getCode","src","a","fetch","then","res","Sandbox","scripts","pScripts","pCode","useState","setCode","loading","setLoading","setScripts","dragging","setDragging","loadersCode","imports","run","useCallback","getTypeScriptWorker","_worker","worker","getSemanticDiagnostics","toString","diags","filter","e","category","console","log","compiledCode","Babel","document","window","codeBlob","Blob","type","url","URL","createObjectURL","children","removeChild","appendChild","createElement","documentElement","innerHTML","JSON","stringify","sc","body","loader","loaders","Promise","all","script","typeCodes","typeCode","join","newScripts","fromEntries","editorRef","className","background","onDragStarted","onDragFinished","pane1Style","position","pane2Style","split","defaultSize","Boolean","debounce","pointerEvents","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.42f778d9.chunk.js","sourcesContent":["import React, {\r\n    FC,\r\n    useRef,\r\n    useEffect,\r\n    forwardRef,\r\n    useImperativeHandle,\r\n  } from \"react\";\r\n  import * as monaco from \"monaco-editor\";\r\n  import * as monacoEditor from \"monaco-editor/esm/vs/editor/editor.api\";\r\n  import {\r\n    CodeActionAdaptor,\r\n    FormatHelper,\r\n  } from \"monaco-editor/esm/vs/language/typescript/languageFeatures\";\r\n  import prettier from \"prettier/standalone\";\r\n  import babel from \"prettier/parser-babylon\";\r\n  import gql from \"prettier/parser-graphql\";\r\n  import ts from \"prettier/parser-typescript\";\r\n  export interface CodeEditorProps\r\n    extends monaco.editor.IStandaloneEditorConstructionOptions {\r\n    beforeMount?(monaco: typeof monacoEditor);\r\n    didMount?(\r\n      editor: monaco.editor.IStandaloneCodeEditor,\r\n      monaco: typeof monacoEditor\r\n    );\r\n    onChange?(code: string, event: monaco.editor.IModelContentChangedEvent);\r\n    defaultValue?: string;\r\n  }\r\n  const CodeEditor: FC<CodeEditorProps> & { TypeScript: typeof TypeScript } = ({\r\n    beforeMount,\r\n    onChange,\r\n    ...props\r\n  }) => {\r\n    const container = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n      beforeMount?.(monaco);\r\n      const editor = monaco.editor.create(container.current!, {\r\n        automaticLayout: true,\r\n        minimap: { enabled: false },\r\n        ...props,\r\n      });\r\n      editor.onDidChangeModelContent((event) => {\r\n        onChange?.(editor.getValue(), event);\r\n      });\r\n      return () => {\r\n        editor.dispose();\r\n      };\r\n    }, []);\r\n    return (\r\n      <>\r\n        <div style={{ height: `100%`, width: `100%` }} ref={container} />\r\n      </>\r\n    );\r\n  };\r\n  interface TypeScriptProps extends CodeEditorProps {\r\n    /**\r\n     * ts编辑器外置库\r\n     */\r\n    libs?: { [key: string]: string };\r\n    /**\r\n     * ts自定义d.ts\r\n     */\r\n    extraLibs?: { [key: string]: string };\r\n    /**\r\n     * node_module种的code\r\n     */\r\n    libCode?: { [key: string]: string };\r\n  }\r\n  interface ModelRef {\r\n    model: monaco.editor.ITextModel;\r\n    monaco: typeof monaco;\r\n  }\r\n  export interface TypeScriptRef extends ModelRef {}\r\n  const TypeScript = forwardRef<TypeScriptRef, TypeScriptProps>(\r\n    (\r\n      { defaultValue = ``, libs = {}, extraLibs = {}, libCode = {}, ...props },\r\n      ref\r\n    ) => {\r\n      const model = useRef<monaco.editor.ITextModel>();\r\n      const monacoRef = useRef<typeof monaco>();\r\n      if (!model.current) {\r\n        //   debugger\r\n        model.current = monaco.editor.createModel(\r\n          defaultValue,\r\n          \"typescript\",\r\n          monaco.Uri.file(\"/index.tsx\")\r\n        );\r\n      }\r\n      useImperativeHandle(ref, () => ({\r\n        model: model.current!,\r\n        monaco: monacoRef.current!,\r\n      }));\r\n      useEffect(() => {\r\n        return () => {\r\n          model.current!.dispose();\r\n        };\r\n      }, []);\r\n      const loadLibs = () => {\r\n        Object.entries(libs).map(([name, code]) => {\r\n          monaco.languages.typescript.typescriptDefaults.addExtraLib(\r\n            code,\r\n            `file:///node_modules/@types/${name}/index.d.ts`\r\n          );\r\n        });\r\n        Object.entries(extraLibs).map(([name, code]) => {\r\n          monaco.languages.typescript.typescriptDefaults.addExtraLib(\r\n            code,\r\n            `file:///node_modules/@types/${name}`\r\n          );\r\n        });\r\n      };\r\n      useEffect(() => {\r\n        // debugger\r\n        // console.log(libs);\r\n        // console.log(monaco.languages.typescript.typescriptDefaults);\r\n  \r\n        loadLibs();\r\n  \r\n        return () => {};\r\n      }, [libs]);\r\n      return (\r\n        <CodeEditor\r\n          model={model.current}\r\n          didMount={() => {}}\r\n          beforeMount={(monaco) => {\r\n            monacoRef.current = monaco;\r\n            const compilerDefaults: monaco.languages.typescript.CompilerOptions = {\r\n              baseUrl: \"file:///node_modules/@types/\",\r\n  \r\n              allowSyntheticDefaultImports: true,\r\n              jsx: monaco.languages.typescript.JsxEmit.React,\r\n              experimentalDecorators: true,\r\n              noEmit: true,\r\n              allowJs: true,\r\n              types: [\"react\"],\r\n            };\r\n  \r\n            monaco.languages.typescript.typescriptDefaults.setCompilerOptions(\r\n              compilerDefaults\r\n            );\r\n  \r\n            monaco.languages.typescript.typescriptDefaults.setEagerModelSync(\r\n              true\r\n            );\r\n            const prettierOptions = {\r\n              provideDocumentFormattingEdits(model) {\r\n                return [\r\n                  {\r\n                    range: model.getFullModelRange(),\r\n                    text: prettier.format(model.getValue(), {\r\n                      trailingComma: \"all\",\r\n                      jsxSingleQuote: false,\r\n                      semi: true,\r\n                      plugins: [babel, ts, gql],\r\n                      arrowParens: \"always\",\r\n                      bracketSpacing: true,\r\n                      htmlWhitespaceSensitivity: \"css\",\r\n                      insertPragma: false,\r\n                      jsxBracketSameLine: true,\r\n                      printWidth: 80,\r\n                      proseWrap: \"preserve\",\r\n                      quoteProps: \"as-needed\",\r\n                      requirePragma: false,\r\n                      singleQuote: false,\r\n                      tabWidth: 2,\r\n                      useTabs: false,\r\n                      vueIndentScriptAndStyle: false,\r\n                    }),\r\n                  },\r\n                ];\r\n              },\r\n            };\r\n            monaco.languages.registerDocumentFormattingEditProvider(\r\n              \"typescript\",\r\n              prettierOptions\r\n            );\r\n            loadLibs();\r\n          }}\r\n          scrollbar={{}}\r\n          {...props}\r\n        />\r\n      );\r\n    }\r\n  );\r\n  CodeEditor.TypeScript = TypeScript;\r\n  export default CodeEditor;\r\n  ","import React, {\r\n  FC,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport SplitPane from \"react-split-pane\";\r\nimport CodeEditor, { TypeScriptRef } from \"./CodeEditor\";\r\nimport Frame, { FrameContextConsumer } from \"react-frame-component\";\r\nimport debounce from \"lodash.debounce\";\r\nimport \"./index.css\";\r\nimport * as monaco from \"monaco-editor\";\r\nimport * as Babel from \"@babel/standalone\";\r\n\r\ninterface Script {\r\n  //作为importmap的key\r\n  name: string;\r\n  //加载路径\r\n  src?: string;\r\n  //加载代码，优先级最高\r\n  code?: string;\r\n  //ts类型\r\n  types?: string[];\r\n  typeCode?: string;\r\n}\r\n/**\r\n * 沙盒属性，目前默认ts沙盒\r\n */\r\nexport interface SandboxProps {\r\n  scripts?: Script[];\r\n  code?: string;\r\n}\r\n\r\n/**\r\n * systemimports映射\r\n */\r\ninterface ImportsReflect {\r\n  [key: string]: string;\r\n}\r\n\r\nconst babelConfig = {\r\n  filename: \"main.tsx\",\r\n  presets: [\"typescript\", \"es2015\", \"react\"],\r\n  plugins: [\r\n    \"proposal-do-expressions\",\r\n    \"proposal-optional-chaining\",\r\n    [\r\n      \"proposal-pipeline-operator\",\r\n      {\r\n        proposal: \"minimal\",\r\n      },\r\n    ],\r\n    [\r\n      \"proposal-decorators\",\r\n      {\r\n        legacy: true,\r\n      },\r\n    ],\r\n    [\"proposal-class-properties\", { loose: true }],\r\n    \"transform-modules-systemjs\",\r\n  ],\r\n};\r\nconst getCode = async (src) => {\r\n  return fetch(src).then((res) => res.text());\r\n};\r\nconst Sandbox: FC<SandboxProps> = ({\r\n  scripts: pScripts = [],\r\n  code: pCode = \"\",\r\n  //   cssLib = [],\r\n  //   files = {},\r\n  //   extraLibType = {},\r\n  //   beforeExcuteScript = \"\",\r\n  //   defaultValue = \"\",\r\n  ...props\r\n}) => {\r\n  const [code, setCode] = useState<string>(pCode);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [scripts, setScripts] = useState<Script[]>(pScripts);\r\n  // const [error, setError] = useState<string>();\r\n  const [dragging, setDragging] = useState<boolean>();\r\n\r\n  const loadersCode = useRef<string>(\"\");\r\n  const imports = useRef<ImportsReflect>();\r\n\r\n  // console.log(imports,loadersCode);\r\n\r\n  const run = useCallback(async (code) => {\r\n    try {\r\n      const _worker = await monaco.languages.typescript.getTypeScriptWorker();\r\n      const worker = await _worker();\r\n      const diags = (\r\n        await worker.getSemanticDiagnostics(\r\n          monaco.Uri.file(\"/index.tsx\").toString()\r\n        )\r\n      ).filter((e) => e.category === 1);\r\n      console.log(diags);\r\n      const compiledCode = Babel.transform(code, babelConfig).code;\r\n      //修复文档流\r\n      const document: Document = ref.current.window.document;\r\n      const codeBlob = new Blob([compiledCode], { type: \"text/javascript\" });\r\n      const url = URL.createObjectURL(codeBlob);\r\n      if (document.children[0]) {\r\n        document.removeChild(document.children[0]);\r\n      }\r\n      document.appendChild(document.createElement(\"html\"));\r\n      document.documentElement.innerHTML = `\r\n        <head>\r\n          <style type=\"text/css\">csscode</style>\r\n          <script type=\"systemjs-importmap\">\r\n         ${JSON.stringify({ imports: imports.current })}\r\n        </script>\r\n        </head>\r\n        <body>\r\n          <div id=\"root\">\r\n          </div>\r\n        </body>\r\n        `;\r\n      /**\r\n       * 执行代码加载\r\n       */\r\n      const sc = document.createElement(\"script\");\r\n      sc.type = \"systemjs-module\";\r\n      sc.src = url;\r\n      document.body.appendChild(sc);\r\n      console.log(compiledCode);\r\n      /**\r\n       * loader代码加载\r\n       */\r\n      const loader = document.createElement(\"script\");\r\n      loader.type = \"text/javascript\";\r\n      loader.innerHTML = loadersCode.current;\r\n      document.body.appendChild(loader);\r\n    } catch (error) {\r\n      // setError(error.stack);\r\n      const document: Document = ref.current.window.document;\r\n      if (document.children[0]) {\r\n        document.removeChild(document.children[0]);\r\n      }\r\n      document.appendChild(document.createElement(\"html\"));\r\n      document.documentElement.innerHTML = `\r\n        <head>\r\n          <style type=\"text/css\">\r\n            #root{\r\n              color:red;\r\n              font-weight:bold;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <pre id=\"root\" >${error}</pre>\r\n        </body>\r\n        `;\r\n    } finally {\r\n      // store.rendering = false;\r\n    }\r\n\r\n    setCode(code);\r\n  }, []);\r\n  // const [content, setContent] = useState<string>();\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        const loaders: Script[] = [\r\n          {\r\n            name: \"systemjs\",\r\n            src: \"https://unpkg.com/systemjs/dist/system.min.js\",\r\n          },\r\n          {\r\n            name: \"systemjs-extra-amd\",\r\n            src: \"https://unpkg.com/systemjs/dist/extras/amd.min.js\",\r\n          },\r\n        ];\r\n        await Promise.all(\r\n          loaders.map(async (loader) => {\r\n            const code = await getCode(loader.src!);\r\n            loader.code = code;\r\n            return loader;\r\n          })\r\n        );\r\n        const newScripts = await Promise.all(\r\n          scripts.map(async (script) => {\r\n            const code = await getCode(script.src!);\r\n            script.code = code;\r\n            if (script.types) {\r\n              const typeCodes = await Promise.all(\r\n                script.types.map(async (url) => await getCode(url))\r\n              );\r\n              script.typeCode = typeCodes.join(\";\");\r\n            }\r\n            return script;\r\n          })\r\n        );\r\n        imports.current = Object.fromEntries(\r\n          newScripts.map((e) => [\r\n            e.name,\r\n            URL.createObjectURL(\r\n              new Blob([e.code || \"\"], { type: \"text/javascript\" })\r\n            ),\r\n          ])\r\n        );\r\n        setScripts([...newScripts]);\r\n        loadersCode.current = loaders.map((e) => e.code).join(\";\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n      run(pCode);\r\n    })();\r\n  }, []);\r\n  const ref = useRef<any>();\r\n  const editorRef = useRef<TypeScriptRef>(null);\r\n  return (\r\n    <>\r\n      <div className=\"sand-box\" style={{ background: \"#fff\", height: `100vh` }}>\r\n        <SplitPane\r\n          onDragStarted={() => setDragging(true)}\r\n          onDragFinished={() => setDragging(false)}\r\n          pane1Style={{ position: \"relative\" }}\r\n          pane2Style={{ position: \"relative\" }}\r\n          split=\"vertical\"\r\n          defaultSize={`50%`}\r\n          // minSize={250}\r\n        >\r\n          <div style={{ height: `100%` }} key=\"code\">\r\n            <CodeEditor.TypeScript\r\n              ref={editorRef}\r\n              defaultValue={code}\r\n              // libCode={Object.fromEntries(\r\n              //   scripts.map((e) => [e.name, e.typeCode]).filter(Boolean)\r\n              // )}\r\n              //   extraLibs={extraLibType}\r\n              libs={Object.fromEntries(\r\n                scripts.map((e) => [e.name, e.typeCode]).filter(Boolean)\r\n              )}\r\n              onChange={debounce(run, 800)}\r\n            />\r\n          </div>\r\n          <div style={{ height: `100%` }} key=\"preview\">\r\n            <>\r\n              {!loading && (\r\n                <Frame\r\n                  style={{\r\n                    height: `100%`,\r\n                    width: `100%`,\r\n                    pointerEvents: dragging ? \"none\" : \"initial\",\r\n                  }}\r\n                  className=\"frame\"\r\n                >\r\n                  <FrameContextConsumer>\r\n                    {({ window }) => {\r\n                      ref.current = window;\r\n                      // debugger\r\n                      return <></>;\r\n                    }}\r\n                  </FrameContextConsumer>\r\n                </Frame>\r\n              )}\r\n            </>\r\n          </div>\r\n        </SplitPane>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Sandbox;\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Sandbox from \"./react-sandbox\";\nimport CodeEditor from \"./react-sandbox/CodeEditor\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\">\n        <Sandbox\n        code={`import React from \"react\";\nimport ReactDOM from \"react-dom\";\nReactDOM.render(<>hello world</>, document.getElementById(\"root\"));`}\n          scripts={[\n            {\n              name: \"react\",\n              src: \"https://unpkg.com/react/umd/react.production.min.js\",\n              types: [\n                \"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/react/index.d.ts\",\n                \"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/react/global.d.ts\",\n              ],\n            },\n            {\n              name: \"react-dom\",\n              src:\n                \"https://unpkg.com/react-dom/umd/react-dom.production.min.js\",\n                types:[\n                  \"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/react-dom/index.d.ts\",\n                ]\n            },\n          ]}\n        />\n      </Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}