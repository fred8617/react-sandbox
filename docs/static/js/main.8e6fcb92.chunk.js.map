{"version":3,"sources":["../node_modules/@babel/standalone sync","react-sandbox/CodeEditor.tsx","react-sandbox/util.ts","react-sandbox/useUUID.tsx","react-sandbox/ConsoleDivider.tsx","react-sandbox/babelPlugins.tsx","react-sandbox/index.tsx","example/antd/index.tsx","example/antd/code.lsz","example/leetcode/index.tsx","example/leetcode/code.lsz","example/leetcode/defs.lsz","example/leetcode/implements.lsz","example/sourcemap/index.tsx","example/sourcemap/code.lsz","example/sourcemap/defs.lsz","example/sourcemap/implements.lsz","example/apollo-client/index.tsx","example/apollo-client/code.lsz","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","CodeEditor","beforeMount","onChange","props","container","useRef","useEffect","monaco","editor","create","current","automaticLayout","minimap","enabled","onDidChangeModelContent","event","getValue","dispose","style","height","width","ref","TypeScript","forwardRef","defs","defaultValue","libs","extraLibs","libCode","model","monacoRef","uri","file","ifExsitModel","getModel","isDisposed","createModel","useImperativeHandle","loadLibs","typescript","typescriptDefaults","addExtraLib","Object","entries","map","name","didMount","compilerDefaults","baseUrl","allowSyntheticDefaultImports","jsx","languages","JsxEmit","React","experimentalDecorators","noEmit","allowJs","types","setCompilerOptions","setEagerModelSync","prettierOptions","provideDocumentFormattingEdits","range","getFullModelRange","text","prettier","format","trailingComma","jsxSingleQuote","semi","plugins","babel","ts","gql","parser","arrowParens","bracketSpacing","htmlWhitespaceSensitivity","insertPragma","jsxBracketSameLine","printWidth","proseWrap","quoteProps","requirePragma","singleQuote","tabWidth","useTabs","vueIndentScriptAndStyle","registerDocumentFormattingEditProvider","registerCompletionItemProvider","provideCompletionItems","position","word","getWordUntilPosition","startLineNumber","lineNumber","endLineNumber","startColumn","endColumn","suggestions","label","kind","CompletionItemKind","Function","documentation","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","scrollbar","getDiagsMessages","diags","cagegoryLevel","messages","forEach","diag","messageText","category","push","next","generateUUID","r","len","radix","chars","split","value","i","length","Math","random","join","ConsoleDivider","margin","border","Babel","DeadCycle","path","uuid","uuidIncresment","template","ast","uuidJudge","generate","node","blocks","body","unshift","insertUUID","parentBody","parent","consequent","splice","visitor","WhileStatement","DoWhileStatement","ForInStatement","ForOfStatement","ForStatement","sourceMap","SourceMapConsumer","initialize","babelConfig","filename","presets","proposal","legacy","loose","getCode","src","fetch","then","res","Sandbox","scripts","pScripts","pCode","styles","pStyles","preExecute","pageDefaultSize","wrapperFunction","useUUID","eventId","pExecute","useState","consoleMessages","setConsoleMessages","smap","setSMap","loading","setLoading","setScripts","setStyles","dragging","setDragging","loadersCode","cssCode","imports","useMemo","fromEntries","typeCode","filter","Boolean","run","useCallback","setModelMarkers","editorRef","getTypeScriptWorker","_worker","worker","getSemanticDiagnostics","toString","errors","babelCompiled","console","log","compiledCode","document","contentWindow","codeBlob","Blob","type","url","URL","createObjectURL","rawSourceMap","children","removeChild","appendChild","createElement","documentElement","innerHTML","JSON","stringify","pExcuteScript","preExcuteScript","loader","sc","onConsoleMessage","ev","message","detail","onFileMessage","data","source","line","column","error","undefined","stack","urlIndex","indexOf","isLine","num","Number","consumer","originPosition","originalPositionFor","destroy","severity","dispatchConsoleEvent","CustomEvent","window","dispatchEvent","dispatchFileEvent","addEventListener","removeEventListener","loaders","systemjs","systemjsAmd","Promise","all","script","typeCodes","newScripts","href","newStyles","containerRef","horizontalMaxSize","setHorizontalMaxSize","verticalMaxSize","setVerticalMaxSize","caclSize","clientWidth","clientHeight","consoleHeight","setConsoleHeight","caclConsoleHeight","containerHeight","includes","parseFloat","replace","className","background","onDragStarted","onDragFinished","pane1Style","pane2Style","defaultSize","minSize","maxSize","debounce","pointerEvents","title","overflow","padding","boxSizing","Fragment","paddingBottom","color","collapsed","version","Antd","require","LeetCode","localStorage","getItem","c","setItem","Apollo","App","exact","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"yHAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,CACP,CACAF,EAAoBK,KAAO,WAAa,MAAO,EAAI,EACnDL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,G,qqn5BCSnBC,EAAsE,SAAH,GAIlE,IAHLC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SACGC,EAAK,iBAEFC,EAAYC,iBAAuB,MAezC,OAdAC,qBAAU,WACG,OAAXL,QAAW,IAAXA,KAAcM,GACd,IAAMC,EAASD,SAAcE,OAAOL,EAAUM,QAAO,aACnDC,iBAAiB,EACjBC,QAAS,CAAEC,SAAS,IACjBV,IAKL,OAHAK,EAAOM,yBAAwB,SAACC,GACtB,OAARb,QAAQ,IAARA,KAAWM,EAAOQ,WAAYD,EAChC,IACO,WACLP,EAAOS,SACT,CACF,GAAG,IAED,mCACE,qBAAKC,MAAO,CAAEC,OAAO,OAASC,MAAM,QAAWC,IAAKjB,KAG1D,EA2NAJ,EAAWsB,WAnMQC,sBACjB,WASEF,GACI,IAAD,IARDG,YAAI,MAAG,GAAE,MACTC,oBAAY,eACZC,YAAI,MAAG,CAAC,EAAC,MACTC,iBAAS,MAAG,CAAC,EAAC,EAEXxB,GAFW,EACdyB,QACQ,kBAIJC,EAAQxB,mBACRyB,EAAYzB,mBAClB,IAAKwB,EAAMnB,QAAS,CAElB,IAAMqB,EAAMxB,MAAWyB,KAAK,aACtBC,EAAe1B,SAAc2B,SAASH,IAExCE,GAA6B,OAAZA,QAAY,IAAZA,KAAcE,aAGjCN,EAAMnB,QAAUH,SAAc6B,YAC5BX,EACA,aACAM,GALFF,EAAMnB,QAAUuB,CAQpB,CACAI,8BAAoBhB,GAAK,iBAAO,CAC9BQ,MAAOA,EAAMnB,QACbH,OAAQuB,EAAUpB,QACnB,IACDJ,qBAAU,WACR,OAAO,WAAO,IAAD,EACE,QAAb,EAAAuB,EAAMnB,eAAO,OAAb,EAAeO,SACjB,CACF,GAAG,IACH,IAAMqB,EAAW,WACf/B,YAAiBgC,WAAWC,mBAAmBC,YAC7CjB,EAAK,0CAGPkB,OAAOC,QAAQjB,GAAMkB,KAAI,YAAmB,IAAD,mBAAhBC,EAAI,KAAEnD,EAAI,KACnCa,YAAiBgC,WAAWC,mBAAmBC,YAC7C/C,EAAK,+BAAD,OAC2BmD,EAAI,eAEvC,IACAH,OAAOC,QAAQhB,GAAWiB,KAAI,YAAmB,IAAD,mBAAhBC,EAAI,KAAEnD,EAAI,KACxCa,YAAiBgC,WAAWC,mBAAmBC,YAC7C/C,EAAK,+BAAD,OAC2BmD,GAEnC,GACF,EAMA,OALAvC,qBAAU,WAAO,IAAD,IAGd,OAFAgC,IACc,QAAd,EAAAnC,EAAMD,gBAAQ,OAAd,OAAAC,EAA8B,QAAzB,EAAY0B,EAAMnB,eAAO,aAAb,EAAeM,YACzB,WAAO,CAChB,GAAG,CAACU,IAEF,cAAC,EAAU,aACTG,MAAOA,EAAMnB,QACboC,SAAU,WAAO,EACjB7C,YAAa,SAACM,GACZuB,EAAUpB,QAAUH,EACpB,IAAMwC,EAAgE,CACpEC,QAAS,+BACTC,8BAA8B,EAC9BC,IAAK3C,EAAO4C,UAAUZ,WAAWa,QAAQC,MACzCC,wBAAwB,EACxBC,QAAQ,EACRC,SAAS,EACTC,MAAO,CAAC,UAGVlD,EAAO4C,UAAUZ,WAAWC,mBAAmBkB,mBAC7CX,GAGFxC,EAAO4C,UAAUZ,WAAWC,mBAAmBmB,mBAC7C,GAEF,IAAMC,EAAkB,CACtBC,+BAA8B,SAAChC,GAC7B,MAAO,CACL,CACEiC,MAAOjC,EAAMkC,oBACbC,KAAMC,IAASC,OAAOrC,EAAMb,WAAY,CACtCmD,cAAe,MACfC,gBAAgB,EAChBC,MAAM,EACNC,QAAS,CAACC,IAAOC,IAAIC,KACrBC,OAAQ,WACRC,YAAa,SACbC,gBAAgB,EAChBC,0BAA2B,MAC3BC,cAAc,EACdC,oBAAoB,EACpBC,WAAY,GACZC,UAAW,WACXC,WAAY,YACZC,eAAe,EACfC,aAAa,EACbC,SAAU,EACVC,SAAS,EACTC,yBAAyB,KAIjC,GAEFhF,EAAO4C,UAAUqC,uCACf,aACA5B,GAGFrD,EAAO4C,UAAUsC,+BAA+B,aAAc,CAC5DC,uBAAwB,SAAU7D,EAAO8D,GACvC,IAAIC,EAAO/D,EAAMgE,qBAAqBF,GAClC7B,EAAQ,CACVgC,gBAAiBH,EAASI,WAC1BC,cAAeL,EAASI,WACxBE,YAAaL,EAAKK,YAClBC,UAAWN,EAAKM,WAElB,MAAO,CACLC,YAAa,CACX,CACEC,MAAO,MACPC,KAAM9F,EAAO4C,UAAUmD,mBAAmBC,SAC1CC,cAAe,cACfC,WAAY,kBACZC,gBACEnG,EAAO4C,UAAUwD,6BACdC,gBACL9C,MAAOA,GAET,CACEsC,MAAO,QACPC,KAAM9F,EAAO4C,UAAUmD,mBAAmBC,SAC1CC,cAAe,gBACfC,WAAY,oBACZC,gBACEnG,EAAO4C,UAAUwD,6BACdC,gBACL9C,MAAOA,GAET,CACEsC,MAAO,YACPC,KAAM9F,EAAO4C,UAAUmD,mBAAmBC,SAC1CC,cAAe,cACfC,WAAY,yCACZC,gBACEnG,EAAO4C,UAAUwD,6BACdC,gBACL9C,MAAOA,GAET,CACEsC,MAAO,MACPC,KAAM9F,EAAO4C,UAAUmD,mBAAmBC,SAC1CC,cAAe,aACfC,WAAW,yHAGXC,gBACEnG,EAAO4C,UAAUwD,6BACdC,gBACL9C,MAAOA,GAET,CACEsC,MAAO,QACPC,KAAM9F,EAAO4C,UAAUmD,mBAAmBC,SAC1CC,cAAe,eACfC,WAAW,+BAGXC,gBACEnG,EAAO4C,UAAUwD,6BACdC,gBACL9C,MAAOA,IAIf,IAEFxB,GACF,EACAuE,UAAW,CAAC,GACR1G,GAGV,IAGaH,Q,oCCrQF8G,EAAmB,SAAnBA,EACXC,GAMI,IAFJC,EAAqB,uDAAG,EACxBC,EAAkB,uDAAG,GAmBrB,OAjBAF,EAAMG,SAAQ,SAACC,GACb,IAAQC,EAA0BD,EAA1BC,YAAaC,EAAaF,EAAbE,SACrB,GAA2B,kBAAhBD,GAA4BC,IAAaL,EAClDC,EAASK,KAAKF,OACT,CACLH,EAASK,KACNF,EACEA,aAEL,IACEG,EACEH,EADFG,KAEEA,GACFT,EAAiBS,EAAMP,EAAeC,EAE1C,CACF,IACOA,CACT,E,kBCrBO,SAASO,IAA2C,IAanDC,EAbqBC,EAAG,uDAAG,EAAGC,EAAK,uDAAG,GACtCC,EAAQ,uDAAuDC,MACnE,IAEIC,EAAkB,GACpBC,EAAI,EAGR,GAFAJ,EAAQA,GAASC,EAAMI,OAEnBN,EAEF,IAAKK,EAAI,EAAGA,EAAIL,EAAKK,IAAKD,EAAMC,GAAKH,EAAM,EAAKK,KAAKC,SAAWP,QAYhE,IALAG,EAAM,GAAKA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAM,IAC/CA,EAAM,IAAM,IAIPC,EAAI,EAAGA,EAAI,GAAIA,IACbD,EAAMC,KACTN,EAAI,EAAqB,GAAhBQ,KAAKC,SACdJ,EAAMC,GAAKH,EAAY,KAANG,EAAgB,EAAJN,EAAW,EAAMA,IAKpD,OAAOK,EAAMK,KAAK,GACpB,C,+BC5BeC,EAPiC,SAAH,GAAc,qCACzD,OACE,mCACE,qBAAKlH,MAAO,CAAEmH,OAAO,YAAaC,OAAO,qBAG/C,E,oCCHAC,iBAAqB,gBAAgB,WACnC,IAAMC,EAAY,SAACC,GACjB,IAAMC,EAAOlB,IACPmB,EAAiBC,IAASC,IAAI,GAAD,OAAIH,EAAI,OACrCI,EAAYF,IAASC,IAAI,gBAAD,OACrBH,EAAI,6GAEbK,IAASN,EAAKO,MAAMtJ,KAAI,kMAOlBuJ,EAAgBR,EAAKO,KAAKE,KAAKA,KACrCD,EAAOE,QAAQL,GACfG,EAAOE,QAAQR,GACf,IAAMS,EAAaR,IAASC,IAAI,OAAD,OAAQH,EAAI,OAErCW,EAAaZ,EAAKa,OAAOJ,MAAQT,EAAKa,OAAOC,WACnD,GAAIF,EACF,IAAK,IAAItB,EAAI,EAAGA,EAAIsB,EAAWrB,OAAQD,IAAK,CAE1C,GADasB,EAAWtB,KACXU,EAAKO,KAAM,CACtBK,EAAWG,OAAOzB,EAAG,EAAGqB,GACxB,KACF,CACF,CAEJ,EACA,MAAO,CACLK,QAAS,CACPC,eAAgBlB,EAChBmB,iBAAkBnB,EAClBoB,eAAgBpB,EAChBqB,eAAgBrB,EAChBsB,aAActB,GAGpB,I,4HCrBCuB,IAAUC,kBAA0BC,WAAW,CAC9C,oBAAqB,yDAGvB,IAsCMC,EAAc,CAElBH,WAAW,EACXI,SAAU,WACVC,QAAS,CAAC,aAAc,SACxB9F,QAAS,CAEP,0BACA,6BACA,CACE,6BACA,CACE+F,SAAU,YAGd,CACE,sBACA,CACEC,QAAQ,IAGZ,CAAC,4BAA6B,CAAEC,OAAO,MAGrCC,EAAO,iDAAG,WAAOC,GAAG,oGACjBC,MAAMD,GAAKE,MAAK,SAACC,GAAG,OAAKA,EAAI5G,MAAM,KAAC,2CAC5C,gBAFY,sCAqgBE6G,EAzfmB,SAAH,GAUxB,IAAD,IATJC,QAASC,OAAQ,MAAG,GAAE,MACtBrL,KAAMsL,OAAK,MAAG,GAAE,MAChBC,OAAQC,OAAO,MAAG,GAAE,EACpBvJ,EAAS,EAATA,UAAU,EAAD,EACTwJ,kBAAU,MAAG,GAAE,EACfjL,EAAQ,EAARA,SAAS,EAAD,EACRkL,uBAAe,cAEZjL,GAFY,EACfkL,gBACQ,kBAEF3C,EH9GO,WAA0B,IAAzBhB,EAAG,uDAAG,EAAGC,EAAK,uDAAG,GAC/B,OAAOtH,iBAAOmH,EAAaE,EAAMC,IAASjH,OAC3C,CG4Gc4K,GACPC,EAAO,aAAS7C,GAChB8C,EAAQ,8HAGaD,EAAO,6BAAsB7C,EAAI,sKAIjC6C,EAAO,gCAAyB7C,EAAI,iIAIpC6C,EAAO,gCAAyB7C,EAAI,mCAI/D,EAA8C+C,mBAA2B,IAAG,mBAArEC,EAAe,KAAEC,EAAkB,KAC1C,EAAwBF,qBAA2B,mBAA5CG,EAAI,KAAEC,EAAO,KACpB,EAA8BJ,oBAAkB,GAAK,mBAA9CK,EAAO,KAAEC,EAAU,KAC1B,EAA8BN,mBAAmBV,GAAS,oBAAnDD,GAAO,MAAEkB,GAAU,MAC1B,GAA4BP,mBAAkBP,GAAQ,qBAA/CD,GAAM,MAAEgB,GAAS,MACxB,GAAgCR,qBAAmB,qBAA5CS,GAAQ,MAAEC,GAAW,MACtBC,GAAc/L,iBAAe,IAC7BgM,GAAUhM,iBAAe,IACzBiM,GAAUjM,mBACVqB,GAAO6K,mBAAQ,WACnB,OAAO7J,OAAO8J,YACZ1B,GAAQlI,KAAI,SAACpD,GAAC,MAAK,CAACA,EAAEqD,KAAMrD,EAAEiN,SAAS,IAAEC,OAAOC,SAEpD,GAAG,CAAC7B,KACE8B,GAAMC,sBAAW,iDAAC,WAAOnN,GAAI,qHAQoC,OARpC,SAE/BiM,GAAmB,iBAAM,EAAE,IAM3BpL,SAAcuM,gBAAgBC,GAAUrM,QAASmB,MAAO,MAAO,IAAI,SAC7CtB,YAAiBgC,WAAWyK,sBAAsB,KAAD,EAA1D,OAAPC,EAAO,gBACQA,IAAU,KAAD,EAAlB,OAANC,EAAM,iBAEJA,EAAOC,uBACX5M,MAAWyB,KAAK,aAAaoL,YAC9B,QAEsC,GALnCrG,EAAK,OAIT2F,QAAO,SAAClN,GAAC,OAAoB,IAAfA,EAAE6H,QAAc,OAC1BJ,EAAWH,EAAiBC,IACrBiB,OAAS,GAAC,iBACc,MAA7BqF,EAASpG,EAASkB,KAAK,MACvB,IAAI1I,MAAM4N,GAAQ,KAAD,GAyBc,GAvB/B,OAARnN,QAAQ,IAARA,KAAWR,GAOL4N,EAAgB/E,YAAgB,GAAD,OAAI7I,GAAI,2BACxCwK,GAAW,IACdE,QAAQ,GAAD,mBAAMF,EAAYE,SAAO,CAAE,WAClC9F,QAAQ,CACN,gBAAc,mBACX4F,EAAY5F,SAAO,CACtB,kCAGJiJ,QAAQC,IAAI,gBAAiBF,GAEvBG,EAAY,oBACdH,EAAc5N,KAAI,WAGhBgO,EACO,QADuB,EAClCrM,GAAIX,eAAO,OAAe,QAAf,EAAX,EAAaiN,qBAAa,WAAf,EAAX,EAA4BD,SAChB,CAAD,kDAGPE,EAAW,IAAIC,KAAK,CAACJ,GAAe,CAAEK,KAAM,oBAC5CC,EAAMC,IAAIC,gBAAgBL,GAEhC/B,GAAQ,iBAAO,CAAEqC,aAAcZ,EAAc1K,IAAKmL,MAAK,IAC3C,OAARL,QAAQ,IAARA,KAAUS,SAAS,IACrBT,EAASU,YAAYV,EAASS,SAAS,IAGzCT,EAASW,YAAYX,EAASY,cAAc,SAC5CZ,EAASa,gBAAgBC,UAAS,6DAELnC,GAAQ3L,QAAO,8EAErC+N,KAAKC,UAAU,CAAEpC,QAASA,GAAQ5L,UAAU,oIAe7CiO,EAAgBjB,EAASY,cAAc,WAC/BR,KAAO,kBACrBa,EAAcH,UAAYjG,YAAgBiD,EAAUtB,GAAaxK,KACjEgO,EAASa,gBAAgBF,YAAYM,IAI/BC,EAAkBlB,EAASY,cAAc,WAC/BR,KAAO,kBACvBc,EAAgBJ,UAAYjG,YAAgB,GAAD,OAAI4C,GAAU,2BACpDjB,GAAW,IACdE,QAAQ,GAAD,mBAAMF,EAAYE,SAAO,CAAE,WAClC9F,QAAQ,YAAK4F,EAAY5F,YACxB5E,KACHgO,EAASa,gBAAgBF,YAAYO,IAI/BC,EAASnB,EAASY,cAAc,WAC/BR,KAAO,kBACde,EAAOL,UAAYpC,GAAY1L,QAC/BgN,EAASa,gBAAgBF,YAAYQ,IAI/BC,EAAKpB,EAASY,cAAc,WAC/BR,KAAO,kBACVgB,EAAGN,UAAS,oCACQT,EAAG,8MAKYxC,EAAO,6BAAsB7C,EAAI,0FAKpEgF,EAASa,gBAAgBF,YAAYS,GACrC,wBAGuC,GAHvC,0BAEMpB,EACO,QADuB,EAClCrM,GAAIX,eAAO,OAAe,QAAf,EAAX,EAAaiN,qBAAa,WAAf,EAAX,EAA4BD,SAChB,CAAD,kDAGTA,EAASS,SAAS,IACpBT,EAASU,YAAYV,EAASS,SAAS,IAEzCT,EAASW,YAAYX,EAASY,cAAc,SAC5CZ,EAASa,gBAAgBC,UAAS,sRAY9B,sGAGP,mDA7IsB,GA6IpB,IACGO,GAAmBlC,uBAAY,SAACmC,GACpC,IAAMC,EAA0BD,EAAGE,OACnCvD,GAAmB,SAACD,GAAe,4BAASA,GAAe,CAAEuD,GAAU,GACzE,GAAG,IACGE,GAAgBtC,sBAAW,iDAC/B,WAAOmC,GAAE,0GAEgB,UAAnBA,EAAGE,OAAOpB,MAAoBlC,EAAMmC,MAAQiB,EAAGE,OAAOE,KAAKC,OAAM,iBAC1C,GAD0C,EACrCL,EAAGE,OAAOE,KAAlCE,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAQC,EAAK,EAALA,WACPC,IAATH,QAAiCG,IAAXF,IAAwBC,EAAK,iBAC/CE,EAAQF,EAAME,MACd3B,EAAMnC,EAAMmC,IACZ4B,EAAWD,EAAME,QAAQ7B,EAAM,KACrCuB,EAAO,GACPC,EAAS,GACLM,GAAS,EACJ9H,EAAI4H,EAAW5B,EAAI/F,OAAS,EAAE,KAAD,QAAED,EAAI2H,EAAM1H,QAAM,iBACjC,GACT,OADN8H,EAAMJ,EAAM3H,IACH,wDAGH,MAAR+H,EAAW,iBACE,OAAfD,GAAS,EAAM,gCAGbA,EACFP,GAAQQ,EAERP,GAAUO,EACX,QAbuD/H,IAAG,wBAe7DuH,EAAOS,OAAOT,GACdC,EAASQ,OAAOR,GAAQ,QAGjB,OADTD,IACAC,IAAS,UACc,IAAIxF,IAAUC,kBACnC4B,EAAMsC,cACN,KAAD,GAFK8B,EAAQ,OAGRC,EAAiBD,EAASE,oBAAoB,CAClDZ,OACAC,WAEFS,EAASG,UAST5P,SAAcuM,gBAAgBC,GAAUrM,QAASmB,MAAO,MAAO,CAC7D,CACEoE,YAAagK,EAAeV,OAC5BrJ,UAAW+J,EAAeV,OAC1BzJ,gBAAiBmK,EAAeX,KAChCtJ,cAAeiK,EAAeX,KAC9Bc,SAAU,EACVnB,QAASO,EAAMP,WAEhB,4CAEN,mDA3D8B,GA4D/B,CAACrD,IAEGyE,GAAuBxD,uBAC3B,SAACqC,GACC,IAAMnO,EAAQ,IAAIuP,YAAW,UAAS/E,EAAO,YAAY,CAAE2D,WAC3DqB,OAAOC,cAAczP,EACvB,GACA,CAACwK,IAEGkF,GAAoB5D,uBACxB,SAACqC,GACC,IAAMnO,EAAQ,IAAIuP,YAAW,UAAS/E,EAAO,SAAS,CAAE2D,WACxDqB,OAAOC,cAAczP,EACvB,GACA,CAACwK,IAEHjL,qBAAU,WAMR,OALAiQ,OAAO,YAAD,OAAahF,EAAO,aAAc8E,GACxCE,OAAO,YAAD,OAAahF,EAAO,UAAWkF,GACrCF,OAAOG,iBAAiB,GAAD,OAAInF,EAAO,YAAYwD,IAC9CwB,OAAOG,iBAAiB,GAAD,OAAInF,EAAO,SAAS4D,IAEpC,WACLoB,OAAOI,oBAAoB,GAAD,OAAIpF,EAAO,YAAYwD,IACjDwB,OAAOI,oBAAoB,GAAD,OAAIpF,EAAO,SAAS4D,GAChD,CACF,GAAG,CACDkB,GACAI,GACAlF,EACAwD,GACAI,KAEF7O,qBAAU,WACR,gCAAC,kGAcI,OAdJ,SAGSsQ,EAAoB,CACxB,CACE/N,KAAM,WACN4H,IAAK,gDACL/K,KAAK,OAAD,OAASmR,IAAQ,gBAEvB,CACEhO,KAAM,qBACN4H,IAAK,oDACL/K,KAAMoR,MAER,EAAD,OACwBC,QAAQC,IAC/BlG,GAAQlI,IAAG,iDAAC,WAAOqO,GAAM,mGACJzG,EAAQyG,EAAOxG,KAAM,KAAD,EACpB,GADb/K,EAAI,OACVuR,EAAOvR,KAAOA,GACVuR,EAAOxN,MAAM,CAAD,+BACUsN,QAAQC,IAC9BC,EAAOxN,MAAMb,IAAG,iDAAC,WAAOmL,GAAG,2FAAWvD,EAAQuD,GAAI,sIAAlC,KAChB,KAAD,EAFKmD,EAAS,OAGfD,EAAOxE,SAAWyE,EAAU/I,KAAK,KAAK,gCAEjC8I,GAAM,4CACd,mDAVU,KAWX,KAAD,EAZe,OAAVE,EAAU,gBAaQJ,QAAQC,IAC9B/F,GAAOrI,IAAG,iDAAC,WAAO1B,GAAK,iGACFsJ,EAAQtJ,EAAMkQ,MAAO,KAAD,EACrB,OADZ1R,EAAI,OACVwB,EAAMxB,KAAOA,EAAK,kBACXwB,GAAK,2CACb,mDAJS,KAKV,KAAD,EANKmQ,EAAS,OAOf/E,GAAQ5L,QAAUgC,OAAO8J,YACvB2E,EAAWvO,KAAI,SAACpD,GAAC,MAAK,CACpBA,EAAEqD,KACFmL,IAAIC,gBACF,IAAIJ,KAAK,CAACrO,EAAEE,MAAQ,IAAK,CAAEoO,KAAM,qBAEpC,KAEHzB,GAAQ3L,QAAU2Q,EAAUzO,KAAI,SAACpD,GAAC,OAAKA,EAAEE,IAAI,IAAEyI,KAAK,IACpD6D,GAAW,YAAImF,IACflF,GAAU,YAAIoF,IACdjF,GAAY1L,QAAUkQ,EAAQhO,KAAI,SAACpD,GAAC,OAAKA,EAAEE,IAAI,IAAEyI,KAAK,KAAK,QAG3D,OAH2D,UAE3D4D,GAAW,GACX,0EAjDJ,EAoDF,GAAG,IAEH,IAAM1K,GAAMhB,iBAA0B,MAChC0M,GAAY1M,iBAAsB,MAClCiR,GAAejR,iBAAuB,MAC5C,GAAkDoL,mBAAiB,MAAK,qBAAjE8F,GAAiB,MAAEC,GAAoB,MAC9C,GAA8C/F,mBAAiB,MAAK,qBAA7DgG,GAAe,MAAEC,GAAkB,MACpCC,GAAW9E,uBAAY,WAC3B2E,GACEF,GAAa5Q,QAASkR,YAjaA,IAmaxBF,GAAmBJ,GAAa5Q,QAASmR,aAlanB,GAmaxB,GAAG,IACH,GAA0CpG,mBAAiB,GAAE,qBAAtDqG,GAAa,MAAEC,GAAgB,MAChCC,GAAoB,SAACC,GACzBF,GAAiBE,EAvaO,GAwa1B,EAiBA,OAhBA3R,qBAAU,WACR,IAAIa,EAAS,EAab,MAZ+B,kBAApBiK,EACLA,EAAgB8G,SAAS,OAC3B/Q,EACEmQ,GAAa5Q,QAASmR,cACrB,EAAIM,WAAW/G,EAAgBgH,QAAQ,IAAK,KAAO,MAEpB,kBAApBhH,IAChBjK,EAASmQ,GAAa5Q,QAASmR,aAAezG,GAEhD4G,GAAkB7Q,GAClBwQ,KACApB,OAAOG,iBAAiB,SAAUiB,IAC3B,kBAAMpB,OAAOI,oBAAoB,SAAUgB,GAAU,CAC9D,GAAG,CAACA,GAAUvG,IAEZ,mCACE,qBACEiH,UAAU,WACVhR,IAAKiQ,GACLpQ,MAAO,CAAEoR,WAAY,OAAQnR,OAAO,SAAW,SAE/C,eAAC,IAAS,CACRoR,cAAe,kBAAMpG,IAAY,EAAK,EACtCqG,eAAgB,kBAAMrG,IAAY,EAAM,EACxCsG,WAAY,CAAE9M,SAAU,YACxB+M,WAAY,CAAE/M,SAAU,YACxBkC,MAAM,WACN8K,YAAW,MACXC,QAAS,EACTC,QAAStB,GAAkB,UAE3B,qBAAKrQ,MAAO,CAAEC,OAAO,QAAU,UAC3B2K,GACA,cAAC,EAAWxK,WAAU,aACpBD,IAAK0L,GACLtL,aAAcuJ,EACdtJ,KAAMA,GACNC,UAAWA,EACXzB,SAAU4S,IAASlG,GAAK,MACpBzM,KAR0B,QAYpC,eAAC,IAAS,CACRD,SAAU,SAACiB,GACT6Q,GAAkBV,GAAa5Q,QAASmR,aAAe1Q,EACzD,EACAoR,cAAe,kBAAMpG,IAAY,EAAK,EACtCqG,eAAgB,kBAAMrG,IAAY,EAAM,EACxCsG,WAAY,CAAE9M,SAAU,YACxBkC,MAAM,aACN8K,YAAavH,EACbyH,QAASpB,GACTmB,QAAS,EAAE,UAEX,qBAAmB1R,MAAO,CAAEE,MAAM,QAAU,UACxC0K,GACA,wBACE5K,MAAO,CACLC,OAAO,OACPC,MAAM,OACN2R,cAAe7G,GAAW,OAAS,WAErC8G,MAAM,aACN3R,IAAKA,MATF,WAaT,qBAEEH,MAAO,CACLC,OAAQ2Q,GACRmB,SAAU,OACVC,QAAS,EACTC,UAAW,cACX,SAEDzH,EACEgB,QAAO,SAACuC,GAAO,OAAKA,EAAQG,KAAKpH,OAAS,CAAC,IAC3CpF,KAAI,SAACqM,EAASlH,GAAC,OACd,eAAC,IAAMqL,SAAQ,WACZnE,EAAQG,KAAKxM,KAAI,SAACwM,EAAMrH,GAIvB,OACE,sBAAK7G,MAAO,CAAEmS,cAAe,GAAI,UACd,kBAATjE,GACW,UAAjBH,EAAQnB,MACRsB,GAAQ,qBAAKlO,MAAO,CAAEoS,MAAO,OAAQ,SAAElE,IACxB,kBAATA,GACW,QAAjBH,EAAQnB,MACRsB,GACE,cAAC,IAAS,CACRlO,MAAO,CAAEyE,SAAU,UACnB4N,WAAS,EACT1Q,KAAM,KAEN4H,IAAK2E,GAAK,aADCrH,IAIA,kBAATqH,GACW,UAAjBH,EAAQnB,MACRsB,GACE,cAAC,IAAS,CACRlO,MAAO,CAAEyE,SAAU,UACnB4N,WAAW,EACX1Q,KAAM,QAEN4H,IAAK,CACHwE,QAASG,EAAKH,QACdS,MAAON,EAAKM,QACZ,aAJS3H,IAOP,OAATqH,GACC,sBAAMlO,MAAO,CAAEoS,MAAO,UAAW,mBAEjB,kBAATlE,GACS,kBAATA,IACU,QAAjBH,EAAQnB,MAAkB,8BAAMsB,IACjB,kBAATA,GACN,sBAAMlO,MAAO,CAAEoS,MAAO,OAAQ,SAC3BlE,EAAKhC,aAGO,oBAATgC,GACN,sBAAMlO,MAAO,CAAEoS,MAAO,QAAS,SAC5BlE,EAAKhC,aAGO,qBAATgC,GACN,sBAAMlO,MAAO,CAAEoS,MAAO,WAAY,uBAEnB,mBAATlE,GACN,sBAAMlO,MAAO,CAAEoS,MAAO,QAAS,SAC5BlE,EAAKhC,eAET,aApD0CrF,GAuDjD,IACCA,IAAM2D,EAAgB1D,OAAS,GAAK,cAAC,EAAc,MAAG,aA9D9BD,GA+DV,KA1EjB,oBAkFlB,ECzlBMyL,EAAU,SAoCDC,EAnCE,WACf,OACE,cAAC,EAAO,CACNxI,OAAQ,CAAC,CAAEmG,KAAK,0BAAD,OAA4BoC,EAAO,wBAClD9T,KCTS,88IDUTiC,UAAW+R,EAAQ,KAAejQ,MAClCqH,QAAS,CACP,CACEjI,KAAM,QACN4H,IAAK,sDACLhH,MAAO,CACL,sGACA,yGAIJ,CACEZ,KAAM,YACN4H,IAAK,8DACLhH,MAAO,CACL,4GAGJ,CACEZ,KAAM,SACN4H,IAAK,4BAEP,CACE5H,KAAM,OACN4H,IAAI,0BAAD,OAA4B+I,MAKzC,EEhBeG,EAhBqB,SAAH,GAAc,qCAAQ,IACrD,EAAkBlI,mBAAiBmI,aAAaC,QAAQ,aAAe,IAAG,mBAAnEC,EAAC,KAAM,KACd,OACE,mCACE,cAAC,EAAO,CACN1I,gBAAiB,EACjB1L,KAAMoU,GCbC,oZDcP5T,SAAU,SAAC4T,GACTF,aAAaG,QAAQ,WAAYD,EACnC,EACAtS,KEjBO,49BFkBP2J,WGlBO,o4DHsBf,EIHewI,GAZqB,SAAH,GAAc,qCAC7C,OACE,mCACE,cAAC,EAAO,CACNvI,gBAAiB,EACjB1L,KCZO,mEDaP8B,KEbO,49BFcP2J,WGdO,o4DHkBf,EIdMqI,GAAU,SAyEDQ,GAvEI,WACjB,OACE,cAAC,EAAO,CACN7I,WAAU,o0BA6BVF,OAAQ,CAAC,CAAEmG,KAAK,0BAAD,OAA4BoC,GAAO,wBAClD9T,KCvCS,omCDwCTiC,UAAS,2BACJ+R,EAAQ,KAAejQ,OACvBiQ,EAAQ,KAAiBjQ,OAE9BqH,QAAS,CACP,CACEjI,KAAM,QACN4H,IAAK,sDACLhH,MAAO,CACL,kGACA,qGAIJ,CACEZ,KAAM,YACN4H,IAAK,8DACLhH,MAAO,CACL,wGAGJ,CACEZ,KAAM,SACN4H,IAAK,4BAEP,CACE5H,KAAM,OACN4H,IAAI,0BAAD,OAA4B+I,KAEjC,CACE3Q,KAAM,iBACN4H,IAAI,yDAKd,EE7CewJ,OAvBf,WACE,OACE,mCACE,cAAC,IAAU,UACT,eAAC,IAAM,WACL,cAAC,IAAK,CAACC,OAAK,EAACzL,KAAK,IAAG,SACnB,cAAC,EAAI,MAEP,cAAC,IAAK,CAACyL,OAAK,EAACzL,KAAK,YAAW,SAC3B,cAAC,EAAQ,MAEX,cAAC,IAAK,CAACyL,OAAK,EAACzL,KAAK,aAAY,SAC5B,cAAC,GAAS,MAEZ,cAAC,IAAK,CAACyL,OAAK,EAACzL,KAAK,iBAAgB,SAChC,cAAC,GAAY,YAMzB,ECfe0L,GAZS,SAACC,GACnBA,GAAeA,aAAuB7N,UACxC,+BAAqBoE,MAAK,YAAkD,IAA/C0J,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,EACV,GAEJ,ECPA7G,QAAQC,IAAIkH,IAASC,QAErBD,IAASC,OAAO,cAAC,GAAG,IAAKjH,SAASkH,eAAe,SAKjDT,I","file":"static/js/main.8e6fcb92.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 474;","import { FC, useRef, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport * as monaco from \"monaco-editor\";\nimport * as monacoEditor from \"monaco-editor/esm/vs/editor/editor.api\";\nimport prettier from \"prettier/standalone\";\nimport babel from \"prettier/parser-babel\";\nimport gql from \"prettier/parser-graphql\";\nimport ts from \"prettier/parser-typescript\";\nexport interface CodeEditorProps\n  extends monaco.editor.IStandaloneEditorConstructionOptions {\n  beforeMount?(monaco: typeof monacoEditor);\n  didMount?(\n    editor: monaco.editor.IStandaloneCodeEditor,\n    monaco: typeof monacoEditor\n  );\n  onChange?(code: string, event?: monaco.editor.IModelContentChangedEvent);\n  defaultValue?: string;\n}\nconst CodeEditor: FC<CodeEditorProps> & { TypeScript: typeof TypeScript } = ({\n  beforeMount,\n  onChange,\n  ...props\n}) => {\n  const container = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    beforeMount?.(monaco);\n    const editor = monaco.editor.create(container.current!, {\n      automaticLayout: true,\n      minimap: { enabled: false },\n      ...props,\n    });\n    editor.onDidChangeModelContent((event) => {\n      onChange?.(editor.getValue(), event);\n    });\n    return () => {\n      editor.dispose();\n    };\n  }, []);\n  return (\n    <>\n      <div style={{ height: `100%`, width: `100%` }} ref={container} />\n    </>\n  );\n};\nexport interface TypeScriptProps extends CodeEditorProps {\n  /**\n   * ts编辑器外置库\n   */\n  libs?: { [key: string]: string };\n  /**\n   * ts自定义d.ts\n   */\n  extraLibs?: { [key: string]: string };\n  /**\n   * node_module种的code\n   */\n  libCode?: { [key: string]: string };\n  /**\n   * 定义\n   */\n  defs?: string;\n}\ninterface ModelRef {\n  model: monaco.editor.ITextModel;\n  monaco: typeof monaco;\n}\nexport interface TypeScriptRef extends ModelRef {}\nconst TypeScript = forwardRef<TypeScriptRef, TypeScriptProps>(\n  (\n    {\n      defs = \"\",\n      defaultValue = ``,\n      libs = {},\n      extraLibs = {},\n      libCode = {},\n      ...props\n    },\n    ref\n  ) => {\n    const model = useRef<monaco.editor.ITextModel>();\n    const monacoRef = useRef<typeof monaco>();\n    if (!model.current) {\n      //   debugger\n      const uri = monaco.Uri.file(\"/main.tsx\");\n      const ifExsitModel = monaco.editor.getModel(uri);\n      // debugger\n      if (ifExsitModel && !ifExsitModel?.isDisposed()) {\n        model.current = ifExsitModel;\n      } else {\n        model.current = monaco.editor.createModel(\n          defaultValue,\n          \"typescript\",\n          uri\n        );\n      }\n    }\n    useImperativeHandle(ref, () => ({\n      model: model.current!,\n      monaco: monacoRef.current!,\n    }));\n    useEffect(() => {\n      return () => {\n        model.current?.dispose();\n      };\n    }, []);\n    const loadLibs = () => {\n      monaco.languages.typescript.typescriptDefaults.addExtraLib(\n        defs,\n        `file:///node_modules/@types/index.d.ts`\n      );\n      Object.entries(libs).map(([name, code]) => {\n        monaco.languages.typescript.typescriptDefaults.addExtraLib(\n          code,\n          `file:///node_modules/@types/${name}/index.d.ts`\n        );\n      });\n      Object.entries(extraLibs).map(([name, code]) => {\n        monaco.languages.typescript.typescriptDefaults.addExtraLib(\n          code,\n          `file:///node_modules/@types/${name}`\n        );\n      });\n    };\n    useEffect(() => {\n      loadLibs();\n      props.onChange?.(model.current?.getValue()!);\n      return () => {};\n    }, [libs]);\n    return (\n      <CodeEditor\n        model={model.current}\n        didMount={() => {}}\n        beforeMount={(monaco) => {\n          monacoRef.current = monaco;\n          const compilerDefaults: monaco.languages.typescript.CompilerOptions = {\n            baseUrl: \"file:///node_modules/@types/\",\n            allowSyntheticDefaultImports: true,\n            jsx: monaco.languages.typescript.JsxEmit.React,\n            experimentalDecorators: true,\n            noEmit: true,\n            allowJs: true,\n            types: [\"react\"],\n          };\n\n          monaco.languages.typescript.typescriptDefaults.setCompilerOptions(\n            compilerDefaults\n          );\n\n          monaco.languages.typescript.typescriptDefaults.setEagerModelSync(\n            true\n          );\n          const prettierOptions = {\n            provideDocumentFormattingEdits(model) {\n              return [\n                {\n                  range: model.getFullModelRange(),\n                  text: prettier.format(model.getValue(), {\n                    trailingComma: \"all\",\n                    jsxSingleQuote: false,\n                    semi: true,\n                    plugins: [babel, ts, gql],\n                    parser: \"babel-ts\",\n                    arrowParens: \"always\",\n                    bracketSpacing: true,\n                    htmlWhitespaceSensitivity: \"css\",\n                    insertPragma: false,\n                    jsxBracketSameLine: true,\n                    printWidth: 80,\n                    proseWrap: \"preserve\",\n                    quoteProps: \"as-needed\",\n                    requirePragma: false,\n                    singleQuote: false,\n                    tabWidth: 2,\n                    useTabs: false,\n                    vueIndentScriptAndStyle: false,\n                  }),\n                },\n              ];\n            },\n          };\n          monaco.languages.registerDocumentFormattingEditProvider(\n            \"typescript\",\n            prettierOptions\n          );\n\n          monaco.languages.registerCompletionItemProvider(\"typescript\", {\n            provideCompletionItems: function (model, position) {\n              var word = model.getWordUntilPosition(position);\n              var range = {\n                startLineNumber: position.lineNumber,\n                endLineNumber: position.lineNumber,\n                startColumn: word.startColumn,\n                endColumn: word.endColumn,\n              };\n              return {\n                suggestions: [\n                  {\n                    label: \"log\",\n                    kind: monaco.languages.CompletionItemKind.Function,\n                    documentation: \"console.log\",\n                    insertText: \"console.log($1)\",\n                    insertTextRules:\n                      monaco.languages.CompletionItemInsertTextRule\n                        .InsertAsSnippet,\n                    range: range,\n                  },\n                  {\n                    label: \"error\",\n                    kind: monaco.languages.CompletionItemKind.Function,\n                    documentation: \"console.error\",\n                    insertText: \"console.error($1)\",\n                    insertTextRules:\n                      monaco.languages.CompletionItemInsertTextRule\n                        .InsertAsSnippet,\n                    range: range,\n                  },\n                  {\n                    label: \"stringify\",\n                    kind: monaco.languages.CompletionItemKind.Function,\n                    documentation: \"console.log\",\n                    insertText: \"console.log(JSON.stringify($1,null,2))\",\n                    insertTextRules:\n                      monaco.languages.CompletionItemInsertTextRule\n                        .InsertAsSnippet,\n                    range: range,\n                  },\n                  {\n                    label: \"for\",\n                    kind: monaco.languages.CompletionItemKind.Function,\n                    documentation: \"for circle\",\n                    insertText: `for(let $\\{1:index} = 0; $\\{1:index} < $\\{2:array}.length; $\\{1:index}++){\n  let $\\{3:element} = $\\{2:array}[$\\{1:index}]\n}`,\n                    insertTextRules:\n                      monaco.languages.CompletionItemInsertTextRule\n                        .InsertAsSnippet,\n                    range: range,\n                  },\n                  {\n                    label: \"while\",\n                    kind: monaco.languages.CompletionItemKind.Function,\n                    documentation: \"while circle\",\n                    insertText: `while($\\{1:condition}){\n \n}`,\n                    insertTextRules:\n                      monaco.languages.CompletionItemInsertTextRule\n                        .InsertAsSnippet,\n                    range: range,\n                  },\n                ],\n              };\n            },\n          });\n          loadLibs();\n        }}\n        scrollbar={{}}\n        {...props}\n      />\n    );\n  }\n);\nCodeEditor.TypeScript = TypeScript;\nexport default CodeEditor;\n","import * as monaco from \"monaco-editor\";\nexport const getDiagsMessages = (\n  diags: (\n    | monaco.languages.typescript.Diagnostic\n    | monaco.languages.typescript.DiagnosticMessageChain\n  )[],\n  cagegoryLevel: number = 1,\n  messages: string[] = []\n) => {\n  diags.forEach((diag) => {\n    const { messageText, category } = diag;\n    if (typeof messageText === \"string\" && category === cagegoryLevel) {\n      messages.push(messageText);\n    } else {\n      messages.push(\n        (messageText as monaco.languages.typescript.DiagnosticMessageChain)\n          .messageText\n      );\n      const {\n        next,\n      } = messageText as monaco.languages.typescript.DiagnosticMessageChain;\n      if (next) {\n        getDiagsMessages(next, cagegoryLevel, messages);\n      }\n    }\n  });\n  return messages;\n};\n","import { useRef } from \"react\";\n\nexport default (len = 8, radix = 16) => {\n  return useRef(generateUUID(len , radix )).current;\n};\n\nexport function generateUUID(len = 8, radix = 16): string {\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\n    \"\"\n  );\n  const value: string[] = [];\n  let i = 0;\n  radix = radix || chars.length;\n\n  if (len) {\n    // Compact form\n    for (i = 0; i < len; i++) value[i] = chars[0 | (Math.random() * radix)];\n  } else {\n    // rfc4122, version 4 form\n    let r;\n\n    // rfc4122 requires these characters\n    /* eslint-disable-next-line */\n    value[8] = value[13] = value[18] = value[23] = \"-\";\n    value[14] = \"4\";\n\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\n    // per rfc4122, sec. 4.1.5\n    for (i = 0; i < 36; i++) {\n      if (!value[i]) {\n        r = 0 | (Math.random() * 16);\n        value[i] = chars[i === 19 ? (r & 0x3) | 0x8 : r];\n      }\n    }\n  }\n\n  return value.join(\"\");\n}\n","import React, { FC } from \"react\";\nexport interface ConsoleDividerProps {}\nconst ConsoleDivider: FC<ConsoleDividerProps> = ({ ...props }) => {\n  return (\n    <>\n      <div style={{ margin: `0 0 8px 0`,border:`1px solid #999` }} />\n    </>\n  );\n};\nexport default ConsoleDivider;\n","import { generateUUID } from \"./useUUID\";\nimport template from \"@babel/template\";\nimport generate from \"@babel/generator\";\nimport { parseExpression, parse } from \"@babel/parser\";\nimport * as Babel from \"@babel/standalone\";\nBabel.registerPlugin(\"maxium-count\", () => {\n  const DeadCycle = (path) => {\n    const uuid = generateUUID();\n    const uuidIncresment = template.ast(`${uuid}++`);\n    const uuidJudge = template.ast(`\n        if(${uuid}>999){\n          document.body.innerHTML=\\`<pre id=\"root\" style=\"color:red;font-weight:bold\" >\n  ${generate(path.node).code}\n  超出最大循环限制(max:999)\n          </pre>\\`;\n        \n          throw new Error('超出最大循环限制')\n        }\n      `);\n    const blocks: any[] = path.node.body.body;\n    blocks.unshift(uuidJudge);\n    blocks.unshift(uuidIncresment);\n    const insertUUID = template.ast(`let ${uuid}=0`);\n    //此处还需要考虑到switch case不一定存在block\n    const parentBody = path.parent.body || path.parent.consequent;\n    if (parentBody) {\n      for (let i = 0; i < parentBody.length; i++) {\n        const node = parentBody[i];\n        if (node === path.node) {\n          parentBody.splice(i, 0, insertUUID);\n          break;\n        }\n      }\n    }\n  };\n  return {\n    visitor: {\n      WhileStatement: DeadCycle,\n      DoWhileStatement: DeadCycle,\n      ForInStatement: DeadCycle,\n      ForOfStatement: DeadCycle,\n      ForStatement: DeadCycle,\n    },\n  };\n});\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, {\n  FC,\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport CodeEditor, { TypeScriptProps, TypeScriptRef } from \"./CodeEditor\";\nimport debounce from \"lodash.debounce\";\nimport \"./index.css\";\nimport * as monaco from \"monaco-editor\";\nimport * as Babel from \"@babel/standalone\";\nimport { getDiagsMessages } from \"./util\";\nimport systemjs from \"!raw-loader!systemjs/dist/system.js\";\nimport systemjsAmd from \"!raw-loader!systemjs/dist/extras/amd.min.js\";\nimport useUUID from \"./useUUID\";\nimport ReactJson from \"react-json-view\";\nimport ConsoleDivider from \"./ConsoleDivider\";\nimport \"./babelPlugins\";\nimport sourceMap from \"source-map\";\n(sourceMap.SourceMapConsumer as any).initialize({\n  \"lib/mappings.wasm\": \"https://unpkg.com/source-map@0.7.3/lib/mappings.wasm\",\n});\n\nconst HORIZONTAL_BAR_SIZE = 16;\nconst VERTICAL_BAR_SIZE = 16;\ninterface Script {\n  //作为importmap的key\n  name: string;\n  //加载路径\n  src?: string;\n  //加载代码，优先级最高\n  code?: string;\n  //ts类型\n  types?: string[];\n  typeCode?: string;\n}\n\ninterface Style {\n  href?: string;\n  code?: string;\n}\n/**\n * 沙盒属性，目前默认ts沙盒\n */\nexport interface SandboxProps extends TypeScriptProps {\n  scripts?: Script[];\n  styles?: Style[];\n  code?: string;\n  preExecute?: string;\n  onChange?(code: string);\n  wrapperFunction?(): string;\n  pageDefaultSize?: number | string;\n}\n\n/**\n * systemimports映射\n */\ninterface ImportsReflect {\n  [key: string]: string;\n}\n\nconst babelConfig = {\n  // sourceMaps:'both' ,\n  sourceMap: true,\n  filename: \"main.tsx\",\n  presets: [\"typescript\", \"react\"],\n  plugins: [\n    // \"maxium-count\",\n    \"proposal-do-expressions\",\n    \"proposal-optional-chaining\",\n    [\n      \"proposal-pipeline-operator\",\n      {\n        proposal: \"minimal\",\n      },\n    ],\n    [\n      \"proposal-decorators\",\n      {\n        legacy: true,\n      },\n    ],\n    [\"proposal-class-properties\", { loose: true }],\n  ],\n};\nconst getCode = async (src) => {\n  return fetch(src).then((res) => res.text());\n};\n\ninterface ConsoleMessage {\n  type: \"log\" | \"error\";\n  data: any[];\n}\ninterface SourceMapObject {\n  rawSourceMap;\n  url: string;\n}\nconst Sandbox: FC<SandboxProps> = ({\n  scripts: pScripts = [],\n  code: pCode = \"\",\n  styles: pStyles = [],\n  extraLibs,\n  preExecute = \"\",\n  onChange,\n  pageDefaultSize = `80%`,\n  wrapperFunction = (code) => code,\n  ...props\n}) => {\n  const uuid = useUUID();\n  const eventId = `sb_${uuid}`;\n  const pExecute = `\nwindow.onerror=function(message, source, line, column, error){\n  console.error(error)\n  window.parent[\\`dispatch_${eventId}_file\\`]({eventId:\"${uuid}\",type:\"error\",data:{message, source, line, column, error}})\n}\nwindow.console.log=null\nwindow.console.log=function(...data){\n  window.parent[\\`dispatch_${eventId}_console\\`]({eventId:\"${uuid}\",type:\"log\",data})\n}\nwindow.console.error=null\nwindow.console.error=function(...data){\n  window.parent[\\`dispatch_${eventId}_console\\`]({eventId:\"${uuid}\",type:\"error\",data})\n}\n;\n  `;\n  const [consoleMessages, setConsoleMessages] = useState<ConsoleMessage[]>([]);\n  const [smap, setSMap] = useState<SourceMapObject>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [scripts, setScripts] = useState<Script[]>(pScripts);\n  const [styles, setStyles] = useState<Style[]>(pStyles);\n  const [dragging, setDragging] = useState<boolean>();\n  const loadersCode = useRef<string>(\"\");\n  const cssCode = useRef<string>(\"\");\n  const imports = useRef<ImportsReflect>();\n  const libs = useMemo(() => {\n    return Object.fromEntries(\n      scripts.map((e) => [e.name, e.typeCode]).filter(Boolean)\n    );\n  }, [scripts]);\n  const run = useCallback(async (code) => {\n    try {\n      setConsoleMessages(() => []);\n      // const uri = monaco.Uri.file(\"/index.tsx\");\n      // const markers=monaco.editor.getModelMarkers({\n\n      // })\n      // console.log(markers);\n      monaco.editor.setModelMarkers(editorRef.current!.model, \"???\", []);\n      const _worker = await monaco.languages.typescript.getTypeScriptWorker();\n      const worker = await _worker();\n      const diags = (\n        await worker.getSemanticDiagnostics(\n          monaco.Uri.file(\"/main.tsx\").toString()\n        )\n      ).filter((e) => e.category === 1);\n      const messages = getDiagsMessages(diags);\n      if (messages.length > 0) {\n        const errors = messages.join(\"\\n\");\n        throw new Error(errors);\n      }\n      onChange?.(code);\n      // const babelPreCheck = Babel.transform(code, {\n      //   ...babelConfig,\n      //   plugins: [\"maxium-count\", ...babelConfig.plugins],\n      // });\n\n      // const preCheckCode = babelPreCheck.code;\n      const babelCompiled = Babel.transform(`${code}`, {\n        ...babelConfig,\n        presets: [...babelConfig.presets, \"es2015\"],\n        plugins: [\n          \"maxium-count\",\n          ...babelConfig.plugins,\n          \"transform-modules-systemjs\",\n        ],\n      });\n      console.log(\"babelCompiled\", babelCompiled);\n\n      const compiledCode = `\n        ${babelCompiled.code}\n     `;\n      //修复文档流\n      const document: Document | undefined =\n        ref.current?.contentWindow?.document;\n      if (!document) {\n        return;\n      }\n      const codeBlob = new Blob([compiledCode], { type: \"text/javascript\" });\n      const url = URL.createObjectURL(codeBlob);\n\n      setSMap(() => ({ rawSourceMap: babelCompiled.map, url }));\n      if (document?.children[0]) {\n        document.removeChild(document.children[0]);\n      }\n\n      document.appendChild(document.createElement(\"html\"));\n      document.documentElement.innerHTML = `\n        <head>\n          <style type=\"text/css\">${cssCode.current}</style>\n          <script type=\"systemjs-importmap\">\n           ${JSON.stringify({ imports: imports.current })}\n          </script>\n        </head>\n        <body>\n          <div id=\"root\">\n          </div>\n        </body>\n        `;\n      process.env.NODE_ENV === \"development\" &&\n        console.log(\"compiledCode\", compiledCode);\n      // console.log(\"preCheckCode\", preCheckCode);\n\n      /**\n       * 预执行代码加载\n       */\n      const pExcuteScript = document.createElement(\"script\");\n      pExcuteScript.type = \"text/javascript\";\n      pExcuteScript.innerHTML = Babel.transform(pExecute, babelConfig).code;\n      document.documentElement.appendChild(pExcuteScript);\n      /**\n       * 预执行代码加载\n       */\n      const preExcuteScript = document.createElement(\"script\");\n      preExcuteScript.type = \"text/javascript\";\n      preExcuteScript.innerHTML = Babel.transform(`${preExecute}`, {\n        ...babelConfig,\n        presets: [...babelConfig.presets, \"es2015\"],\n        plugins: [...babelConfig.plugins],\n      }).code;\n      document.documentElement.appendChild(preExcuteScript);\n      /**\n       * loader代码加载\n       */\n      const loader = document.createElement(\"script\");\n      loader.type = \"text/javascript\";\n      loader.innerHTML = loadersCode.current;\n      document.documentElement.appendChild(loader);\n      /**\n       * 执行代码加载\n       */\n      const sc = document.createElement(\"script\");\n      sc.type = \"text/javascript\";\n      sc.innerHTML = `\n         System.import(\"${url}\");\n         System.onload=function(error, source, deps, isErrSource){\n          //  debugger\n           if(error){\n              console.error(error);\n              window.parent[\\`dispatch_${eventId}_file\\`]({eventId:\"${uuid}\",type:\"error\",data:{source, error}})\n           }\n           \n         }\n        `;\n      document.documentElement.appendChild(sc);\n      // setCode(code);\n    } catch (error) {\n      const document: Document | undefined =\n        ref.current?.contentWindow?.document;\n      if (!document) {\n        return;\n      }\n      if (document.children[0]) {\n        document.removeChild(document.children[0]);\n      }\n      document.appendChild(document.createElement(\"html\"));\n      document.documentElement.innerHTML = `\n        <head>\n          <style type=\"text/css\">\n            #root{\n              color:red;\n              font-weight:bold;\n            }\n          </style>\n        </head>\n        <body>\n          <pre id=\"root\" >${error}</pre>\n        </body>\n        `;\n    } finally {\n    }\n  }, []);\n  const onConsoleMessage = useCallback((ev) => {\n    const message: ConsoleMessage = ev.detail;\n    setConsoleMessages((consoleMessages) => [...consoleMessages, message]);\n  }, []);\n  const onFileMessage = useCallback(\n    async (ev) => {\n      // debugger\n      if (ev.detail.type === \"error\" && smap!.url === ev.detail.data.source) {\n        let { line, column, error } = ev.detail.data;\n        if (line === undefined && column === undefined && error) {\n          const stack = error.stack;\n          const url = smap!.url;\n          const urlIndex = stack.indexOf(url + \":\");\n          line = \"\";\n          column = \"\";\n          let isLine = true;\n          for (let i = urlIndex + url.length + 1; i < stack.length; i++) {\n            const num = stack[i];\n            if (num === \")\") {\n              break;\n            }\n            if (num === \":\") {\n              isLine = false;\n              continue;\n            }\n            if (isLine) {\n              line += num;\n            } else {\n              column += num;\n            }\n          }\n          line = Number(line);\n          column = Number(column);\n        }\n        line--;\n        column--;\n        const consumer = await new sourceMap.SourceMapConsumer(\n          smap!.rawSourceMap\n        );\n        const originPosition = consumer.originalPositionFor({\n          line,\n          column,\n        });\n        consumer.destroy();\n        // console.log(\"originPosition\", originPosition);\n        // console.log(\"line\", line);\n        // console.log(\"column\", column);\n        // console.log(\"error\", error);\n        // consumer.eachMapping(function (m) {\n        //   console.log(m);\n        // });\n        // debugger;\n        monaco.editor.setModelMarkers(editorRef.current!.model, \"???\", [\n          {\n            startColumn: originPosition.column!,\n            endColumn: originPosition.column!,\n            startLineNumber: originPosition.line!,\n            endLineNumber: originPosition.line!,\n            severity: 8,\n            message: error.message,\n          },\n        ]);\n      }\n    },\n    [smap]\n  );\n  const dispatchConsoleEvent = useCallback(\n    (detail) => {\n      const event = new CustomEvent<any>(`${eventId}_console`, { detail });\n      window.dispatchEvent(event);\n    },\n    [eventId]\n  );\n  const dispatchFileEvent = useCallback(\n    (detail) => {\n      const event = new CustomEvent<any>(`${eventId}_file`, { detail });\n      window.dispatchEvent(event);\n    },\n    [eventId]\n  );\n  useEffect(() => {\n    window[`dispatch_${eventId}_console`] = dispatchConsoleEvent;\n    window[`dispatch_${eventId}_file`] = dispatchFileEvent;\n    window.addEventListener(`${eventId}_console`, onConsoleMessage);\n    window.addEventListener(`${eventId}_file`, onFileMessage);\n\n    return () => {\n      window.removeEventListener(`${eventId}_console`, onConsoleMessage);\n      window.removeEventListener(`${eventId}_file`, onFileMessage);\n    };\n  }, [\n    dispatchConsoleEvent,\n    dispatchFileEvent,\n    eventId,\n    onConsoleMessage,\n    onFileMessage,\n  ]);\n  useEffect(() => {\n    (async () => {\n      try {\n        // setLoading(true);\n        const loaders: Script[] = [\n          {\n            name: \"systemjs\",\n            src: \"https://unpkg.com/systemjs/dist/system.min.js\",\n            code: `try{${systemjs}}catch(e){}`,\n          },\n          {\n            name: \"systemjs-extra-amd\",\n            src: \"https://unpkg.com/systemjs/dist/extras/amd.min.js\",\n            code: systemjsAmd,\n          },\n        ];\n        const newScripts = await Promise.all(\n          scripts.map(async (script) => {\n            const code = await getCode(script.src!);\n            script.code = code;\n            if (script.types) {\n              const typeCodes = await Promise.all(\n                script.types.map(async (url) => await getCode(url))\n              );\n              script.typeCode = typeCodes.join(\";\");\n            }\n            return script;\n          })\n        );\n        const newStyles = await Promise.all(\n          styles.map(async (style) => {\n            const code = await getCode(style.href!);\n            style.code = code;\n            return style;\n          })\n        );\n        imports.current = Object.fromEntries(\n          newScripts.map((e) => [\n            e.name,\n            URL.createObjectURL(\n              new Blob([e.code || \"\"], { type: \"text/javascript\" })\n            ),\n          ])\n        );\n        cssCode.current = newStyles.map((e) => e.code).join(\"\");\n        setScripts([...newScripts]);\n        setStyles([...newStyles]);\n        loadersCode.current = loaders.map((e) => e.code).join(\";\");\n      } finally {\n        setLoading(false);\n        // run(pCode);\n      }\n    })();\n  }, []);\n\n  const ref = useRef<HTMLIFrameElement>(null);\n  const editorRef = useRef<TypeScriptRef>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [horizontalMaxSize, setHorizontalMaxSize] = useState<number>(9999);\n  const [verticalMaxSize, setVerticalMaxSize] = useState<number>(9999);\n  const caclSize = useCallback(() => {\n    setHorizontalMaxSize(\n      containerRef.current!.clientWidth - HORIZONTAL_BAR_SIZE\n    );\n    setVerticalMaxSize(containerRef.current!.clientHeight - VERTICAL_BAR_SIZE);\n  }, []);\n  const [consoleHeight, setConsoleHeight] = useState<number>(0);\n  const caclConsoleHeight = (containerHeight) => {\n    setConsoleHeight(containerHeight - HORIZONTAL_BAR_SIZE);\n  };\n  useEffect(() => {\n    let height = 0;\n    if (typeof pageDefaultSize === \"string\") {\n      if (pageDefaultSize.includes(\"%\")) {\n        height =\n          containerRef.current!.clientHeight *\n          (1 - parseFloat(pageDefaultSize.replace(\"%\", \"\")) / 100);\n      }\n    } else if (typeof pageDefaultSize === \"number\") {\n      height = containerRef.current!.clientHeight - pageDefaultSize;\n    }\n    caclConsoleHeight(height);\n    caclSize();\n    window.addEventListener(\"resize\", caclSize);\n    return () => window.removeEventListener(\"resize\", caclSize);\n  }, [caclSize, pageDefaultSize]);\n  return (\n    <>\n      <div\n        className=\"sand-box\"\n        ref={containerRef}\n        style={{ background: \"#fff\", height: `100vh` }}\n      >\n        <SplitPane\n          onDragStarted={() => setDragging(true)}\n          onDragFinished={() => setDragging(false)}\n          pane1Style={{ position: \"relative\" }}\n          pane2Style={{ position: \"relative\" }}\n          split=\"vertical\"\n          defaultSize={`50%`}\n          minSize={0}\n          maxSize={horizontalMaxSize}\n        >\n          <div style={{ height: `100%` }} key=\"code\">\n            {!loading && (\n              <CodeEditor.TypeScript\n                ref={editorRef}\n                defaultValue={pCode}\n                libs={libs}\n                extraLibs={extraLibs}\n                onChange={debounce(run, 800)}\n                {...props}\n              />\n            )}\n          </div>\n          <SplitPane\n            onChange={(height) => {\n              caclConsoleHeight(containerRef.current!.clientHeight - height);\n            }}\n            onDragStarted={() => setDragging(true)}\n            onDragFinished={() => setDragging(false)}\n            pane1Style={{ position: \"relative\" }}\n            split=\"horizontal\"\n            defaultSize={pageDefaultSize}\n            maxSize={verticalMaxSize}\n            minSize={0}\n          >\n            <div key=\"preview\" style={{ width: `100%` }}>\n              {!loading && (\n                <iframe\n                  style={{\n                    height: `100%`,\n                    width: `100%`,\n                    pointerEvents: dragging ? \"none\" : \"initial\",\n                  }}\n                  title=\"sb-preview\"\n                  ref={ref}\n                />\n              )}\n            </div>\n            <div\n              key=\"console\"\n              style={{\n                height: consoleHeight,\n                overflow: \"auto\",\n                padding: 8,\n                boxSizing: \"border-box\",\n              }}\n            >\n              {consoleMessages\n                .filter((message) => message.data.length > 0)\n                .map((message, i) => (\n                  <React.Fragment key={`msg${i}`}>\n                    {message.data.map((data, i) => {\n                      // console.dir(data);\n                      // console.log(typeof data);\n\n                      return (\n                        <div style={{ paddingBottom: 8 }} key={`msg${i}`}>\n                          {typeof data === \"string\" &&\n                            message.type === \"error\" &&\n                            data && <pre style={{ color: \"red\" }}>{data}</pre>}\n                          {typeof data === \"object\" &&\n                            message.type === \"log\" &&\n                            data && (\n                              <ReactJson\n                                style={{ position: \"static\" }}\n                                collapsed\n                                name={null}\n                                key={`msg${i}`}\n                                src={data}\n                              />\n                            )}\n                          {typeof data === \"object\" &&\n                            message.type === \"error\" &&\n                            data && (\n                              <ReactJson\n                                style={{ position: \"static\" }}\n                                collapsed={false}\n                                name={\"Error\"}\n                                key={`msg${i}`}\n                                src={{\n                                  message: data.message,\n                                  stack: data.stack,\n                                }}\n                              />\n                            )}\n                          {data === null && (\n                            <span style={{ color: \"purple\" }}>null</span>\n                          )}\n                          {(typeof data === \"number\" ||\n                            typeof data === \"string\") &&\n                            message.type === \"log\" && <pre>{data}</pre>}\n                          {typeof data === \"symbol\" && (\n                            <span style={{ color: \"red\" }}>\n                              {data.toString()}\n                            </span>\n                          )}\n                          {typeof data === \"function\" && (\n                            <span style={{ color: \"gray\" }}>\n                              {data.toString()}\n                            </span>\n                          )}\n                          {typeof data === \"undefined\" && (\n                            <span style={{ color: \"#d3d3d3\" }}>undefined</span>\n                          )}\n                          {typeof data === \"boolean\" && (\n                            <span style={{ color: \"blue\" }}>\n                              {data.toString()}\n                            </span>\n                          )}\n                        </div>\n                      );\n                    })}\n                    {i !== consoleMessages.length - 1 && <ConsoleDivider />}\n                  </React.Fragment>\n                ))}\n            </div>\n          </SplitPane>\n        </SplitPane>\n      </div>\n    </>\n  );\n};\nexport default Sandbox;\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { FC } from \"react\";\nimport Sandbox from \"../../react-sandbox\";\nimport tpCode from \"!raw-loader!./code.lsz\";\nconst version = \"4.12.0\";\nconst Antd: FC = () => {\n  return (\n    <Sandbox\n      styles={[{ href: `https://unpkg.com/antd@${version}/dist/antd.min.css` }]}\n      code={tpCode}\n      extraLibs={require(\"./antd.json\").types}\n      scripts={[\n        {\n          name: \"react\",\n          src: \"https://unpkg.com/react@17/umd/react.development.js\",\n          types: [\n            \"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/react/v17/index.d.ts\",\n            \"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/react/v17/global.d.ts\",\n          ],\n        },\n\n        {\n          name: \"react-dom\",\n          src: \"https://unpkg.com/react-dom@17/umd/react-dom.development.js\",\n          types: [\n            \"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/react-dom/v17/index.d.ts\",\n          ],\n        },\n        {\n          name: \"moment\",\n          src: \"https://unpkg.com/moment\",\n        },\n        {\n          name: \"antd\",\n          src: `https://unpkg.com/antd@${version}`,\n        },\n      ]}\n    />\n  );\n};\nexport default Antd;\n","export default \"import React, { FC, useState } from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport { Input, Typography } from \\\"antd\\\";\\nconst { Title, Paragraph, Text, Link } = Typography;\\nconst blockContent = `AntV 是蚂蚁金服全新一代数据可视化解决方案，致力于提供一套简单方便、专业可靠、不限可能的数据可视化最佳实践。得益于丰富的业务场景和用户需求挑战，AntV 经历多年积累与不断打磨，已支撑整个阿里集团内外 20000+ 业务系统，通过了日均千万级 UV 产品的严苛考验。\\n我们正在基础图表，图分析，图编辑，地理空间可视化，智能可视化等各个可视化的领域耕耘，欢迎同路人一起前行。`;\\ninterface ContentProps {}\\nconsole.log(React)\\nconst Content: FC<ContentProps> = () => {\\n  const [value,setValue]=useState<string>('受控输入组件');\\n  return (\\n    <Typography style={{ padding: 10 }}>\\n      <Title>介绍</Title>\\n      <Paragraph>\\n        蚂蚁的企业级产品是一个庞大且复杂的体系。这类产品不仅量级巨大且功能复杂，而且变动和并发频繁，常常需要设计与开发能够快速的做出响应。同时这类产品中有存在很多类似的页面以及组件，可以通过抽象得到一些稳定且高复用性的内容。\\n      </Paragraph>\\n      <Paragraph>\\n        随着商业化的趋势，越来越多的企业级产品对更好的用户体验有了进一步的要求。带着这样的一个终极目标，我们（蚂蚁金服体验技术部）经过大量的项目实践和总结，逐步打磨出一个服务于企业级产品的设计体系\\n        Ant Design。基于<Text mark>『确定』和『自然』</Text>\\n        的设计价值观，通过模块化的解决方案，降低冗余的生产成本，让设计者专注于\\n        <Text strong>更好的用户体验</Text>。\\n      </Paragraph>\\n      <Title level={2}>设计资源</Title>\\n      <Paragraph>\\n        我们提供完善的设计原则、最佳实践和设计资源文件（\\n        <Text code>Sketch</Text> 和<Text code>Axure</Text>\\n        ），来帮助业务快速设计出高质量的产品原型。\\n      </Paragraph>\\n\\n      <Paragraph>\\n        <ul>\\n          <li>\\n            <Link href=\\\"#\\\">设计原则</Link>\\n          </li>\\n          <li>\\n            <Link href=\\\"#\\\">设计模式</Link>\\n          </li>\\n          <li>\\n            <Link href=\\\"#\\\">设计资源</Link>\\n          </li>\\n        </ul>\\n      </Paragraph>\\n\\n      <Paragraph>\\n        <blockquote>{blockContent}</blockquote>\\n        <pre>{blockContent}</pre>\\n      </Paragraph>\\n\\n      <Paragraph>\\n        按<Text keyboard>Esc</Text>键退出阅读……\\n      </Paragraph>\\n      <Input value={value} onChange={e=>setValue(e.target.value)}/>\\n    </Typography>\\n  );\\n};\\nclass App extends React.Component {\\n  render() {\\n    return (\\n      <>\\n        <Content />\\n      </>\\n    );\\n  }\\n}\\nReactDOM.render(\\n  <>\\n    <App />\\n  </>,\\n  document.getElementById(\\\"root\\\"),\\n);\\n\";","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { FC, useState } from \"react\";\nimport Sandbox from \"../../react-sandbox\";\nimport defs from \"!raw-loader!./defs.lsz\";\nimport implement from \"!raw-loader!./implements.lsz\";\nimport code from \"!raw-loader!./code.lsz\";\nexport interface LeetCodeProps {}\nconst LeetCode: FC<LeetCodeProps> = ({ ...props }) => {\n  const [c, setC] = useState<string>(localStorage.getItem(\"leetcode\") || \"\");\n  return (\n    <>\n      <Sandbox\n        pageDefaultSize={0}\n        code={c || code}\n        onChange={(c) => {\n          localStorage.setItem(\"leetcode\", c);\n        }}\n        defs={defs}\n        preExecute={implement}\n      />\n    </>\n  );\n};\nexport default LeetCode;\n","export default \"/**\\n * 内置\\n * 单链表ListNode\\n * 二叉树TreeNode\\n * 二叉树广度优先反序列化与反序列化serializeWidely,deserializeWidely\\n * execute方法，将结果输出到控制台\\n * 模拟leetcode练习\\n */\\nexecute(1, \\\"string\\\", {}, new ListNode(), new TreeNode());\";","export default \"//二叉树\\nclass TreeNode {\\n    val: number\\n    left: TreeNode | null\\n    right: TreeNode | null\\n    constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\\n        this.val = (val===undefined ? 0 : val)\\n        this.left = (left===undefined ? null : left)\\n        this.right = (right===undefined ? null : right)\\n    }\\n}\\n//单链表\\nclass ListNode {\\n     val: number\\n     next: ListNode | null\\n     constructor(val?: number, next?: ListNode | null) {\\n         this.val = (val===undefined ? 0 : val)\\n         this.next = (next===undefined ? null : next)\\n     }\\n }\\n//执行结果输入到右侧控制台\\nfunction execute(...rest):void;\\n//二叉树广度优先序列化\\nfunction serializeWidely(root: TreeNode | null): string \\n//二叉树广度优先反序列化\\nfunction deserializeWidely(data: string): TreeNode | null \\n \";","export default \"//二叉树\\nclass TreeNode {\\n  val: number;\\n  left: TreeNode | null;\\n  right: TreeNode | null;\\n  constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\\n    this.val = val === undefined ? 0 : val;\\n    this.left = left === undefined ? null : left;\\n    this.right = right === undefined ? null : right;\\n  }\\n}\\n//单链表\\nclass ListNode {\\n  val: number;\\n  next: ListNode | null;\\n  constructor(val?: number, next?: ListNode | null) {\\n    this.val = val === undefined ? 0 : val;\\n    this.next = next === undefined ? null : next;\\n  }\\n}\\nfunction serializeHelper(root: TreeNode | null, result: any[], queue: any[]) {\\n  if (!root) {\\n    queue.push(null);\\n  }\\n}\\nfunction serializeWidely(root: TreeNode | null): string {\\n  if (!root) {\\n    return JSON.stringify([null]);\\n  }\\n  let result = [];\\n  let queue = [root];\\n  while (queue.length > 0) {\\n    const node = queue.shift();\\n    if (node) {\\n      result.push(node.val);\\n      queue.push(node.left, node.right);\\n    } else {\\n      result.push(null);\\n    }\\n  }\\n  return JSON.stringify(result);\\n}\\nfunction deserializeWidely(data: string): TreeNode | null {\\n  const nodes = JSON.parse(data);\\n  const node = nodes.shift();\\n  if (node===null) {\\n    return null;\\n  }\\n  const root = new TreeNode(node);\\n  let queue = [root];\\n  while (queue.length > 0) {\\n    const node = queue.shift();\\n    const leftVal = nodes.shift();\\n    const rightVal = nodes.shift();\\n    if (leftVal !== null && leftVal !== undefined) {\\n      const leftNode = new TreeNode(leftVal);\\n      node.left = leftNode;\\n      queue.push(leftNode);\\n    }\\n    if (rightVal !== null && rightVal !== undefined) {\\n      const rightNode = new TreeNode(rightVal);\\n      node.right = rightNode;\\n      queue.push(rightNode);\\n    }\\n    // break;\\n  }\\n  return root;\\n}\\nfunction execute (...rest) {\\n  console.log(...rest)\\n};\\n\";","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { FC, useState } from \"react\";\nimport Sandbox from \"../../react-sandbox\";\nimport defs from \"!raw-loader!./defs.lsz\";\nimport implement from \"!raw-loader!./implements.lsz\";\nimport code from \"!raw-loader!./code.lsz\";\nexport interface LeetCodeProps {}\nconst LeetCode: FC<LeetCodeProps> = ({ ...props }) => {\n  return (\n    <>\n      <Sandbox\n        pageDefaultSize={0}\n        code={code}\n        defs={defs}\n        preExecute={implement}\n      />\n    </>\n  );\n};\nexport default LeetCode;\n","export default \"console.log(1);\\nvar b = new ListNode(1);\\nb.next;\\nb.next.next;\";","export default \"//二叉树\\nclass TreeNode {\\n    val: number\\n    left: TreeNode | null\\n    right: TreeNode | null\\n    constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\\n        this.val = (val===undefined ? 0 : val)\\n        this.left = (left===undefined ? null : left)\\n        this.right = (right===undefined ? null : right)\\n    }\\n}\\n//单链表\\nclass ListNode {\\n     val: number\\n     next: ListNode | null\\n     constructor(val?: number, next?: ListNode | null) {\\n         this.val = (val===undefined ? 0 : val)\\n         this.next = (next===undefined ? null : next)\\n     }\\n }\\n//执行结果输入到右侧控制台\\nfunction execute(...rest):void;\\n//二叉树广度优先序列化\\nfunction serializeWidely(root: TreeNode | null): string \\n//二叉树广度优先反序列化\\nfunction deserializeWidely(data: string): TreeNode | null \\n \";","export default \"//二叉树\\nclass TreeNode {\\n  val: number;\\n  left: TreeNode | null;\\n  right: TreeNode | null;\\n  constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\\n    this.val = val === undefined ? 0 : val;\\n    this.left = left === undefined ? null : left;\\n    this.right = right === undefined ? null : right;\\n  }\\n}\\n//单链表\\nclass ListNode {\\n  val: number;\\n  next: ListNode | null;\\n  constructor(val?: number, next?: ListNode | null) {\\n    this.val = val === undefined ? 0 : val;\\n    this.next = next === undefined ? null : next;\\n  }\\n}\\nfunction serializeHelper(root: TreeNode | null, result: any[], queue: any[]) {\\n  if (!root) {\\n    queue.push(null);\\n  }\\n}\\nfunction serializeWidely(root: TreeNode | null): string {\\n  if (!root) {\\n    return JSON.stringify([null]);\\n  }\\n  let result = [];\\n  let queue = [root];\\n  while (queue.length > 0) {\\n    const node = queue.shift();\\n    if (node) {\\n      result.push(node.val);\\n      queue.push(node.left, node.right);\\n    } else {\\n      result.push(null);\\n    }\\n  }\\n  return JSON.stringify(result);\\n}\\nfunction deserializeWidely(data: string): TreeNode | null {\\n  const nodes = JSON.parse(data);\\n  const node = nodes.shift();\\n  if (node===null) {\\n    return null;\\n  }\\n  const root = new TreeNode(node);\\n  let queue = [root];\\n  while (queue.length > 0) {\\n    const node = queue.shift();\\n    const leftVal = nodes.shift();\\n    const rightVal = nodes.shift();\\n    if (leftVal !== null && leftVal !== undefined) {\\n      const leftNode = new TreeNode(leftVal);\\n      node.left = leftNode;\\n      queue.push(leftNode);\\n    }\\n    if (rightVal !== null && rightVal !== undefined) {\\n      const rightNode = new TreeNode(rightVal);\\n      node.right = rightNode;\\n      queue.push(rightNode);\\n    }\\n    // break;\\n  }\\n  return root;\\n}\\nfunction execute (...rest) {\\n  console.log(...rest)\\n};\\n\";","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { FC } from \"react\";\nimport Sandbox from \"../../react-sandbox\";\nimport tpCode from \"!raw-loader!./code.lsz\";\nconst version = \"4.12.0\";\n\nconst Apollo: FC = () => {\n  return (\n    <Sandbox\n      preExecute={`\n      var demoJson = {\n        family: [\n          {\n            name: \"张三家\",\n            address: [\"张家界\", \"梅河口\"],\n            poor: false,\n            people: [\n              { name: \"张三\", age: 10 },\n              { name: \"李四\", age: 20 },\n            ],\n            asset: {\n              house: [{ name: \"万科\" }, { name: \"恒大\" }],\n              car: [{ brand: \"benz\" }, { brand: \"bmw\" }],\n            },\n          },\n          {\n            name: \"我家\",\n            address: [\"长春\"],\n            poor: true,\n            people: [{ name: \"我\", age: 28 }],\n            asset: {\n              car: [{ brand: \"byd\" }],\n            },\n          },\n        ],\n      };\n      console.log(demoJson)\n      `}\n      styles={[{ href: `https://unpkg.com/antd@${version}/dist/antd.min.css` }]}\n      code={tpCode}\n      extraLibs={{\n        ...require(\"./antd.json\").types,\n        ...require(\"./apollo.json\").types,\n      }}\n      scripts={[\n        {\n          name: \"react\",\n          src: \"https://unpkg.com/react/umd/react.production.min.js\",\n          types: [\n            \"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/react/index.d.ts\",\n            \"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/react/global.d.ts\",\n          ],\n        },\n\n        {\n          name: \"react-dom\",\n          src: \"https://unpkg.com/react-dom/umd/react-dom.production.min.js\",\n          types: [\n            \"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/react-dom/index.d.ts\",\n          ],\n        },\n        {\n          name: \"moment\",\n          src: \"https://unpkg.com/moment\",\n        },\n        {\n          name: \"antd\",\n          src: `https://unpkg.com/antd@${version}`,\n        },\n        {\n          name: \"@apollo/client\",\n          src: `https://www.lsz8617.com/lib/@apollo/client/index.js`,\n        },\n      ]}\n    />\n  );\n};\nexport default Apollo;\n","export default \"import React, { FC } from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport { Skeleton, Typography } from \\\"antd\\\";\\nimport {\\n  gql,\\n  ApolloClient,\\n  InMemoryCache,\\n  ApolloProvider,\\n  useQuery,\\n} from \\\"@apollo/client\\\";\\nconst query = gql`\\n  \\n`;\\nconst { Paragraph } = Typography;\\nconst client = new ApolloClient({\\n  uri: \\\"http://localhost:8081/v1/graphql\\\",\\n  cache: new InMemoryCache({ addTypename: false }),\\n  headers: {\\n    \\\"x-hasura-admin-secret\\\": \\\"myadminsecretkey\\\",\\n  },\\n  defaultOptions: {\\n    query: {\\n      fetchPolicy: \\\"network-only\\\",\\n    },\\n  },\\n});\\nconst Content: FC = () => {\\n  const { data, loading, error } = useQuery(query);\\n  return (\\n    <Skeleton active loading={loading}>\\n      <Paragraph style={{ padding: 10 }}>\\n        <pre>{JSON.stringify(data || error, null, 2)}</pre>\\n      </Paragraph>\\n    </Skeleton>\\n  );\\n};\\nclass App extends React.Component {\\n  render() {\\n    return (\\n      <ApolloProvider client={client}>\\n        <Content />\\n      </ApolloProvider>\\n    );\\n  }\\n}\\nReactDOM.render(\\n  <>\\n    <App />\\n  </>,\\n  document.getElementById(\\\"root\\\"),\\n);\\n\";","import React, { useState } from \"react\";\n\nimport { parse } from \"querystring\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Antd from \"./example/antd\";\nimport LeetCode from \"./example/leetcode\";\nimport Sourcemap from \"./example/sourcemap\";\nimport ApolloCilent from \"./example/apollo-client\";\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Antd />\n          </Route>\n          <Route exact path=\"/leetcode\">\n            <LeetCode />\n          </Route>\n          <Route exact path=\"/sourcemap\">\n            <Sourcemap />\n          </Route>\n          <Route exact path=\"/apollo-client\">\n            <ApolloCilent />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nconsole.log(ReactDOM.render);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}