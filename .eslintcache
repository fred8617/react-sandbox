[{"C:\\all-project\\sandbox\\src\\index.tsx":"1","C:\\all-project\\sandbox\\src\\reportWebVitals.ts":"2","C:\\all-project\\sandbox\\src\\App.tsx":"3","C:\\all-project\\sandbox\\src\\example\\antd\\index.tsx":"4","C:\\all-project\\sandbox\\src\\example\\leetcode\\index.tsx":"5","C:\\all-project\\sandbox\\src\\react-sandbox\\index.tsx":"6","C:\\all-project\\sandbox\\src\\react-sandbox\\CodeEditor.tsx":"7","C:\\all-project\\sandbox\\src\\react-sandbox\\util.ts":"8","C:\\all-project\\sandbox\\src\\react-sandbox\\useUUID.tsx":"9","C:\\all-project\\sandbox\\src\\react-sandbox\\ConsoleDivider.tsx":"10","C:\\all-project\\sandbox\\src\\react-sandbox\\babelPlugins.tsx":"11"},{"size":455,"mtime":1611543692872,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1611537770637,"results":"14","hashOfConfig":"13"},{"size":546,"mtime":1614732454205,"results":"15","hashOfConfig":"13"},{"size":1168,"mtime":1614664062419,"results":"16","hashOfConfig":"13"},{"size":745,"mtime":1615868883563,"results":"17","hashOfConfig":"13"},{"size":15759,"mtime":1616076235871,"results":"18","hashOfConfig":"13"},{"size":5571,"mtime":1616050159549,"results":"19","hashOfConfig":"13"},{"size":828,"mtime":1614824042632,"results":"20","hashOfConfig":"13"},{"size":1019,"mtime":1614825773825,"results":"21","hashOfConfig":"13"},{"size":288,"mtime":1615859065747,"results":"22","hashOfConfig":"13"},{"size":4536,"mtime":1616040050736,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1naw8n2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"C:\\all-project\\sandbox\\src\\index.tsx",[],["52","53"],"C:\\all-project\\sandbox\\src\\reportWebVitals.ts",[],"C:\\all-project\\sandbox\\src\\App.tsx",["54","55"],"import React, { useState } from \"react\";\r\n\r\nimport { parse } from \"querystring\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Antd from \"./example/antd\";\r\nimport LeetCode from \"./example/leetcode\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Antd />\r\n          </Route>\r\n          <Route exact path=\"/leetcode\">\r\n            <LeetCode />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\all-project\\sandbox\\src\\example\\antd\\index.tsx",[],"C:\\all-project\\sandbox\\src\\example\\leetcode\\index.tsx",["56"],"/* eslint-disable import/no-webpack-loader-syntax */\r\nimport React, { FC, useState } from \"react\";\r\nimport Sandbox from \"../../react-sandbox\";\r\nimport defs from \"!raw-loader!./defs.lsz\";\r\nimport implement from \"!raw-loader!./implements.lsz\";\r\nimport code from \"!raw-loader!./code.lsz\";\r\nexport interface LeetCodeProps {}\r\nconst LeetCode: FC<LeetCodeProps> = ({ ...props }) => {\r\n  const [c, setC] = useState<string>(localStorage.getItem(\"leetcode\") || \"\");\r\n  return (\r\n    <>\r\n      <Sandbox\r\n        pageDefaultSize={0}\r\n        code={c || code}\r\n        onChange={(c) => {\r\n          localStorage.setItem(\"leetcode\", c);\r\n        }}\r\n        defs={defs}\r\n        preExecute={implement}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default LeetCode;\r\n","C:\\all-project\\sandbox\\src\\react-sandbox\\index.tsx",["57","58"],"C:\\all-project\\sandbox\\src\\react-sandbox\\CodeEditor.tsx",["59","60","61","62"],"import React, {\r\n  FC,\r\n  useRef,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport * as monaco from \"monaco-editor\";\r\nimport * as monacoEditor from \"monaco-editor/esm/vs/editor/editor.api\";\r\nimport prettier from \"prettier/standalone\";\r\nimport babel from \"prettier/parser-babel\";\r\nimport gql from \"prettier/parser-graphql\";\r\nimport ts from \"prettier/parser-typescript\";\r\nexport interface CodeEditorProps\r\n  extends monaco.editor.IStandaloneEditorConstructionOptions {\r\n  beforeMount?(monaco: typeof monacoEditor);\r\n  didMount?(\r\n    editor: monaco.editor.IStandaloneCodeEditor,\r\n    monaco: typeof monacoEditor\r\n  );\r\n  onChange?(code: string, event?: monaco.editor.IModelContentChangedEvent);\r\n  defaultValue?: string;\r\n}\r\nconst CodeEditor: FC<CodeEditorProps> & { TypeScript: typeof TypeScript } = ({\r\n  beforeMount,\r\n  onChange,\r\n  ...props\r\n}) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    beforeMount?.(monaco);\r\n    const editor = monaco.editor.create(container.current!, {\r\n      automaticLayout: true,\r\n      minimap: { enabled: false },\r\n      ...props,\r\n    });\r\n    editor.onDidChangeModelContent((event) => {\r\n      onChange?.(editor.getValue(), event);\r\n    });\r\n    return () => {\r\n      editor.dispose();\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div style={{ height: `100%`, width: `100%` }} ref={container} />\r\n    </>\r\n  );\r\n};\r\nexport interface TypeScriptProps extends CodeEditorProps {\r\n  /**\r\n   * ts编辑器外置库\r\n   */\r\n  libs?: { [key: string]: string };\r\n  /**\r\n   * ts自定义d.ts\r\n   */\r\n  extraLibs?: { [key: string]: string };\r\n  /**\r\n   * node_module种的code\r\n   */\r\n  libCode?: { [key: string]: string };\r\n  /**\r\n   * 定义\r\n   */\r\n  defs?: string;\r\n}\r\ninterface ModelRef {\r\n  model: monaco.editor.ITextModel;\r\n  monaco: typeof monaco;\r\n}\r\nexport interface TypeScriptRef extends ModelRef {}\r\nconst TypeScript = forwardRef<TypeScriptRef, TypeScriptProps>(\r\n  (\r\n    {\r\n      defs = \"\",\r\n      defaultValue = ``,\r\n      libs = {},\r\n      extraLibs = {},\r\n      libCode = {},\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const model = useRef<monaco.editor.ITextModel>();\r\n    const monacoRef = useRef<typeof monaco>();\r\n    if (!model.current) {\r\n      //   debugger\r\n      model.current = monaco.editor.createModel(\r\n        defaultValue,\r\n        \"typescript\",\r\n        monaco.Uri.file(\"/index.tsx\")\r\n      );\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n      model: model.current!,\r\n      monaco: monacoRef.current!,\r\n    }));\r\n    useEffect(() => {\r\n      return () => {\r\n        model.current!.dispose();\r\n      };\r\n    }, []);\r\n    const loadLibs = () => {\r\n      monaco.languages.typescript.typescriptDefaults.addExtraLib(\r\n        defs,\r\n        `file:///node_modules/@types/index.d.ts`\r\n      );\r\n      Object.entries(libs).map(([name, code]) => {\r\n        monaco.languages.typescript.typescriptDefaults.addExtraLib(\r\n          code,\r\n          `file:///node_modules/@types/${name}/index.d.ts`\r\n        );\r\n      });\r\n      Object.entries(extraLibs).map(([name, code]) => {\r\n        monaco.languages.typescript.typescriptDefaults.addExtraLib(\r\n          code,\r\n          `file:///node_modules/@types/${name}`\r\n        );\r\n      });\r\n    };\r\n    useEffect(() => {\r\n      loadLibs();\r\n      props.onChange?.(model.current?.getValue()!);\r\n      return () => {};\r\n    }, [libs]);\r\n    return (\r\n      <CodeEditor\r\n        model={model.current}\r\n        didMount={() => {}}\r\n        beforeMount={(monaco) => {\r\n          monacoRef.current = monaco;\r\n          const compilerDefaults: monaco.languages.typescript.CompilerOptions = {\r\n            baseUrl: \"file:///node_modules/@types/\",\r\n            allowSyntheticDefaultImports: true,\r\n            jsx: monaco.languages.typescript.JsxEmit.React,\r\n            experimentalDecorators: true,\r\n            noEmit: true,\r\n            allowJs: true,\r\n            types: [\"react\"],\r\n          };\r\n\r\n          monaco.languages.typescript.typescriptDefaults.setCompilerOptions(\r\n            compilerDefaults\r\n          );\r\n\r\n          monaco.languages.typescript.typescriptDefaults.setEagerModelSync(\r\n            true\r\n          );\r\n          const prettierOptions = {\r\n            provideDocumentFormattingEdits(model) {\r\n              return [\r\n                {\r\n                  range: model.getFullModelRange(),\r\n                  text: prettier.format(model.getValue(), {\r\n                    trailingComma: \"all\",\r\n                    jsxSingleQuote: false,\r\n                    semi: true,\r\n                    plugins: [babel,ts, gql],\r\n                    arrowParens: \"always\",\r\n                    bracketSpacing: true,\r\n                    htmlWhitespaceSensitivity: \"css\",\r\n                    insertPragma: false,\r\n                    jsxBracketSameLine: true,\r\n                    printWidth: 80,\r\n                    proseWrap: \"preserve\",\r\n                    quoteProps: \"as-needed\",\r\n                    requirePragma: false,\r\n                    singleQuote: false,\r\n                    tabWidth: 2,\r\n                    useTabs: false,\r\n                    vueIndentScriptAndStyle: false,\r\n                  }),\r\n                },\r\n              ];\r\n            },\r\n          };\r\n          monaco.languages.registerDocumentFormattingEditProvider(\r\n            \"typescript\",\r\n            prettierOptions\r\n          );\r\n          loadLibs();\r\n        }}\r\n        scrollbar={{}}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nCodeEditor.TypeScript = TypeScript;\r\nexport default CodeEditor;\r\n","C:\\all-project\\sandbox\\src\\react-sandbox\\util.ts",[],"C:\\all-project\\sandbox\\src\\react-sandbox\\useUUID.tsx",["63"],"import { useRef } from \"react\";\r\n\r\nexport default (len = 8, radix = 16) => {\r\n  return useRef(generateUUID(len , radix )).current;\r\n};\r\n\r\nexport function generateUUID(len = 8, radix = 16): string {\r\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\r\n    \"\"\r\n  );\r\n  const value: string[] = [];\r\n  let i = 0;\r\n  radix = radix || chars.length;\r\n\r\n  if (len) {\r\n    // Compact form\r\n    for (i = 0; i < len; i++) value[i] = chars[0 | (Math.random() * radix)];\r\n  } else {\r\n    // rfc4122, version 4 form\r\n    let r;\r\n\r\n    // rfc4122 requires these characters\r\n    /* eslint-disable-next-line */\r\n    value[8] = value[13] = value[18] = value[23] = \"-\";\r\n    value[14] = \"4\";\r\n\r\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\r\n    // per rfc4122, sec. 4.1.5\r\n    for (i = 0; i < 36; i++) {\r\n      if (!value[i]) {\r\n        r = 0 | (Math.random() * 16);\r\n        value[i] = chars[i === 19 ? (r & 0x3) | 0x8 : r];\r\n      }\r\n    }\r\n  }\r\n\r\n  return value.join(\"\");\r\n}\r\n","C:\\all-project\\sandbox\\src\\react-sandbox\\ConsoleDivider.tsx",[],"C:\\all-project\\sandbox\\src\\react-sandbox\\babelPlugins.tsx",["64","65"],"import { generateUUID } from \"./useUUID\";\r\nimport template from \"@babel/template\";\r\nimport generate from \"@babel/generator\";\r\nimport { parseExpression, parse } from \"@babel/parser\";\r\nimport * as Babel from \"@babel/standalone\";\r\nBabel.registerPlugin(\"maxium-count\", () => {\r\n  const DeadCycle = (path) => {\r\n    const uuid = generateUUID();\r\n    const uuidIncresment = template.ast(`${uuid}++`);\r\n    const uuidJudge = template.ast(`\r\n        if(${uuid}>999){\r\n          document.body.innerHTML=\\`<pre id=\"root\" style=\"color:red;font-weight:bold\" >\r\n  ${generate(path.node).code}\r\n  超出最大循环限制(max:999)\r\n          </pre>\\`;\r\n          console.error(\\`${generate(path.node).code}\r\n超出最大循环限制(max:999)\\`)\r\n          throw new Error('超出最大循环限制')\r\n        }\r\n      `);\r\n    const blocks: any[] = path.node.body.body;\r\n    blocks.unshift(uuidJudge);\r\n    blocks.unshift(uuidIncresment);\r\n    // const clearUUID = template.ast(`${uuid}=0`);\r\n    const insertUUID = template.ast(`let ${uuid}=0`);\r\n    const parentBody = path.parent.body;\r\n    for (let i = 0; i < parentBody.length; i++) {\r\n      const node = parentBody[i];\r\n      if (node === path.node) {\r\n        // parentBody.splice(i + 1, 0, clearUUID);\r\n        parentBody.splice(i, 0, insertUUID);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  return {\r\n    visitor: {\r\n      WhileStatement: DeadCycle,\r\n      DoWhileStatement: DeadCycle,\r\n      ForInStatement: DeadCycle,\r\n      ForOfStatement: DeadCycle,\r\n      ForStatement: DeadCycle,\r\n    },\r\n  };\r\n});\r\n//@deprecated\r\n//不完善还需要优化\r\n// Babel.registerPlugin(\"catch-error\", () => {\r\n//   // console.log(functionMap,'functionMap')\r\n//   const CatchError = (path) => {\r\n//     //匿名函数不存在递归问题\r\n//     if (path.type !== \"FunctionDeclaration\" && !path.parent.id) {\r\n//       return;\r\n//     }\r\n//     const uuid = generateUUID();\r\n//     const uuidIncresment = template.ast(`${uuid}++`);\r\n//     const uuidJudge = template.ast(`\r\n//     if(${uuid}>999){\r\n//         document.body.innerHTML=\\`<pre id=\"root\" style=\"color:red;font-weight:bold\" >\r\n//         ${generate(path.node).code}\r\n//         超出最大递归限制(max:999)\r\n//         </pre>\\`;\r\n//         console.error(\\`${generate(path.node).code}\r\n//         超出最大循环限制(max:999)\\`)\r\n//         throw new Error('超出最大递归限制')\r\n//     }\r\n//     `);\r\n//     //统一函数格式\r\n//     //箭头函数的情况\r\n//     if (path.type === \"ArrowFunctionExpression\") {\r\n//       //hash表记录uuid,此处需要想办法完善\r\n//       //   if( path.parent.id){\r\n//       //     // .uuid = uuid;\r\n//       //   }\r\n\r\n//       //如果直接返回值需要包装成block形式\r\n//       if (path.node.body.type !== \"BlockStatement\") {\r\n//         if (path.node.body.type === \"CallExpression\") {\r\n//           //callExpersion需要提出来，然后负责清空变量uuid\r\n//           const uuid = generateUUID();\r\n//           path.node.body = template.ast(`\r\n//             {\r\n//                 const ${uuid}=${generate(path.node.body).code}\r\n//                 return ${uuid}\r\n//             }\r\n//         `);\r\n//         } else {\r\n//           path.node.body = template.ast(`\r\n//             {\r\n//                 return ${generate(path.node.body).code}\r\n//             }\r\n//         `);\r\n//         }\r\n//       }\r\n//     } else {\r\n//       //function情况\r\n//       //   path.node.id.uuid = uuid;\r\n//     }\r\n//     const clearUUID = template.ast(`${uuid}=0`);\r\n//     const insertUUID = template.ast(`var ${uuid}=0`);\r\n//     const blocks: any[] = path.node.body.body;\r\n//     const node =\r\n//       path.type === \"ArrowFunctionExpression\"\r\n//         ? path.parentPath?.parentPath?.node\r\n//         : path.node;\r\n//     blocks.unshift(uuidJudge);\r\n//     blocks.unshift(uuidIncresment);\r\n//     const parentBody =\r\n//       path.type === \"ArrowFunctionExpression\"\r\n//         ? path.parentPath?.parentPath?.parentPath?.node.body\r\n//         : path.parent.body;\r\n//     if (parentBody) {\r\n//       for (let i = 0; i < parentBody.length; i++) {\r\n//         const n = parentBody[i];\r\n//         if (n === node) {\r\n//           parentBody.splice(i + 1, 0, clearUUID);\r\n//           parentBody.splice(i, 0, insertUUID);\r\n//           break;\r\n//         }\r\n//       }\r\n//     }\r\n//   };\r\n//   return {\r\n//     visitor: {\r\n//       FunctionExpression: CatchError,\r\n//       ArrowFunctionExpression: CatchError,\r\n//       FunctionDeclaration: CatchError,\r\n//     },\r\n//   };\r\n// });\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":15},{"ruleId":"70","severity":1,"message":"75","line":9,"column":13,"nodeType":"72","messageId":"73","endLine":9,"endColumn":17},{"ruleId":"76","severity":1,"message":"77","line":245,"column":6,"nodeType":"78","endLine":245,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":322,"column":6,"nodeType":"78","endLine":322,"endColumn":8,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"82","line":43,"column":6,"nodeType":"78","endLine":43,"endColumn":8,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":109,"column":47,"nodeType":"86","messageId":"87","endLine":109,"endColumn":49},{"ruleId":"84","severity":1,"message":"85","line":115,"column":52,"nodeType":"86","messageId":"87","endLine":115,"endColumn":54},{"ruleId":"76","severity":1,"message":"88","line":126,"column":8,"nodeType":"78","endLine":126,"endColumn":14,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":1,"nodeType":"92","endLine":5,"endColumn":3},{"ruleId":"70","severity":1,"message":"93","line":4,"column":10,"nodeType":"72","messageId":"73","endLine":4,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":4,"column":27,"nodeType":"72","messageId":"73","endLine":4,"endColumn":32},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'parse' is defined but never used.","'setC' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'onChange' and 'pExecute'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["96"],"React Hook useEffect has missing dependencies: 'pCode', 'run', 'scripts', and 'styles'. Either include them or remove the dependency array.",["97"],"React Hook useEffect has missing dependencies: 'beforeMount', 'onChange', and 'props'. Either include them or remove the dependency array. If 'beforeMount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["98"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'loadLibs' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["99"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'parseExpression' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [onChange, pExecute]",{"range":"108","text":"109"},"Update the dependencies array to be: [pCode, run, scripts, styles]",{"range":"110","text":"111"},"Update the dependencies array to be: [beforeMount, onChange, props]",{"range":"112","text":"113"},"Update the dependencies array to be: [libs, loadLibs, props]",{"range":"114","text":"115"},[6884,6886],"[onChange, pExecute]",[9365,9367],"[pCode, run, scripts, styles]",[1298,1300],"[beforeMount, onChange, props]",[3362,3368],"[libs, loadLibs, props]"]